
::STORM::TestCase BA_ControlNodesForkJoinCF \
    -setup_script {
       my resetAllAutonames ::xotcl::Object
      ::UML2::BusinessActivity create ::process
      ::process addNode ::UML2::InitialNode Start
      ::process addNode ::UML2::BusinessAction A
      ::process addNode ::UML2::BusinessAction B
      ::process addNode ::UML2::BusinessAction C
      ::process addNode ::UML2::BusinessAction D
      ::process addNode ::UML2::ActivityFinalNode End
      ::process addEdge ::UML2::ControlFlow\
	   ::UML2::InitialNode Start\
	   ::UML2::BusinessAction A
      ::process addNode ::UML2::ForkNode FN
      ::process addNode ::UML2::JoinNode JN
    } \
    -cleanup_script {
      ::process destroy
    }

::STORM::TestScenario BA_ControlNodesForkJoinCF::AddControlFlowSuccess\
    -test_body {[::process addEdge ::UML2::ControlFlow\
		    ::UML2::BusinessAction A\
		    ::UML2::ForkNode FN] success}\
    -expected_result 1
BA_ControlNodesForkJoinCF::AddControlFlowSuccess preconditions assign\
    { {my lequal [lsort -dictionary [::process::nodes info children]] [list ::process::nodes::activityfinalnode1\
								    ::process::nodes::businessaction1\
								    ::process::nodes::businessaction2\
								    ::process::nodes::businessaction3\
								    ::process::nodes::businessaction4\
								    ::process::nodes::forknode1\
								    ::process::nodes::initialnode1\
								    ::process::nodes::joinnode1]}
      {my lequal [::process::edges info children] ::process::edges::controlflow1}
      {my lequal [::process::nodes::initialnode1 info class] ::UML2::InitialNode}
      {my lequal [::process::nodes::initialnode1 outgoing] ::process::edges::controlflow1}
      {my lequal [::process::nodes::initialnode1 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction1 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction1 incoming] ::process::edges::controlflow1}
      {my lequal [::process::nodes::businessaction1 outgoing] ""}
      {my lequal [::process::nodes::businessaction1 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction2 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction2 incoming] ""}
      {my lequal [::process::nodes::businessaction2 outgoing] ""}
      {my lequal [::process::nodes::businessaction2 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction3 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction3 incoming] ""}
      {my lequal [::process::nodes::businessaction3 outgoing] ""}
      {my lequal [::process::nodes::businessaction3 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction4 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction4 incoming] ""}
      {my lequal [::process::nodes::businessaction4 outgoing] ""}
      {my lequal [::process::nodes::businessaction4 owning_graph] ::process}
      {my lequal [::process::nodes::forknode1 info class] ::UML2::ForkNode}
      {my lequal [::process::nodes::forknode1 incoming] ""}
      {my lequal [::process::nodes::forknode1 outgoing] ""}
      {my lequal [::process::nodes::forknode1 name] FN}
      {my lequal [::process::nodes::forknode1 owning_graph] ::process}
      {my lequal [::process::nodes::joinnode1 info class] ::UML2::JoinNode}
      {my lequal [::process::nodes::joinnode1 incoming] ""}
      {my lequal [::process::nodes::joinnode1 outgoing] ""}
      {my lequal [::process::nodes::joinnode1 name] JN}
      {my lequal [::process::nodes::joinnode1 owning_graph] ::process}
      {my lequal [::process::nodes::activityfinalnode1 info class] ::UML2::ActivityFinalNode}
      {my lequal [::process::nodes::activityfinalnode1 incoming] ""}
      {my lequal [::process::nodes::activityfinalnode1 owning_graph] ::process}
      {my lequal [::process::edges::controlflow1 source] Start}
      {my lequal [::process::edges::controlflow1 source_type] ::UML2::InitialNode}
      {my lequal [::process::edges::controlflow1 target] A}      
      {my lequal [::process::edges::controlflow1 target_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow1 source_navigable] 0}
      {my lequal [::process::edges::controlflow1 target_navigable] 1}
      {my lequal [::process::edges::controlflow1 owning_graph] ::process}
    }
BA_ControlNodesForkJoinCF::AddControlFlowSuccess postconditions assign\
    { {my lequal [lsort -dictionary [::process::nodes info children]] [list  ::process::nodes::activityfinalnode1\
									   ::process::nodes::businessaction1\
									   ::process::nodes::businessaction2\
									   ::process::nodes::businessaction3\
									   ::process::nodes::businessaction4\
									   ::process::nodes::forknode1\
									   ::process::nodes::initialnode1\
									   ::process::nodes::joinnode1]}
      {my lequal [lsort -dictionary [::process::edges info children]] [list ::process::edges::controlflow1\
									   ::process::edges::controlflow2]}
      {my lequal [::process::nodes::initialnode1 info class] ::UML2::InitialNode}
      {my lequal [::process::nodes::initialnode1 outgoing] ::process::edges::controlflow1}
      {my lequal [::process::nodes::initialnode1 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction1 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction1 incoming] ::process::edges::controlflow1}
      {my lequal [::process::nodes::businessaction1 outgoing] ::process::edges::controlflow2}
      {my lequal [::process::nodes::businessaction1 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction2 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction2 incoming] ""}
      {my lequal [::process::nodes::businessaction2 outgoing] ""}
      {my lequal [::process::nodes::businessaction2 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction3 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction3 incoming] ""}
      {my lequal [::process::nodes::businessaction3 outgoing] ""}
      {my lequal [::process::nodes::businessaction3 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction4 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction4 incoming] ""}
      {my lequal [::process::nodes::businessaction4 outgoing] ""}
      {my lequal [::process::nodes::businessaction4 owning_graph] ::process}
      {my lequal [::process::nodes::forknode1 info class] ::UML2::ForkNode}
      {my lequal [::process::nodes::forknode1 incoming] ::process::edges::controlflow2}
      {my lequal [::process::nodes::forknode1 outgoing] ""}
      {my lequal [::process::nodes::forknode1 owning_graph] ::process}
      {my lequal [::process::nodes::joinnode1 info class] ::UML2::JoinNode}
      {my lequal [::process::nodes::joinnode1 incoming] ""}
      {my lequal [::process::nodes::joinnode1 outgoing] ""}
      {my lequal [::process::nodes::joinnode1 owning_graph] ::process}
      {my lequal [::process::nodes::activityfinalnode1 info class] ::UML2::ActivityFinalNode}
      {my lequal [::process::nodes::activityfinalnode1 incoming] ""}
      {my lequal [::process::nodes::activityfinalnode1 owning_graph] ::process}
      {my lequal [::process::edges::controlflow1 source] Start}
      {my lequal [::process::edges::controlflow1 source_type] ::UML2::InitialNode}
      {my lequal [::process::edges::controlflow1 target] A}      
      {my lequal [::process::edges::controlflow1 target_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow1 source_navigable] 0}
      {my lequal [::process::edges::controlflow1 target_navigable] 1}
      {my lequal [::process::edges::controlflow1 owning_graph] ::process}
      {my lequal [::process::edges::controlflow2 source] A}
      {my lequal [::process::edges::controlflow2 source_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow2 target] FN}      
      {my lequal [::process::edges::controlflow2 target_type] ::UML2::ForkNode}
      {my lequal [::process::edges::controlflow2 source_navigable] 0}
      {my lequal [::process::edges::controlflow2 target_navigable] 1}
      {my lequal [::process::edges::controlflow2 owning_graph] ::process}
    }
BA_ControlNodesForkJoinCF order add BA_ControlNodesForkJoinCF::AddControlFlowSuccess end


::STORM::TestScenario BA_ControlNodesForkJoinCF::AddControlFlowFail\
    -test_body {[::process addEdge ::UML2::ControlFlow\
		    ::UML2::BusinessAction A\
		    ::UML2::ForkNode FN] success}\
    -expected_result 0
BA_ControlNodesForkJoinCF::AddControlFlowFail preconditions assign\
    { {my lequal [lsort -dictionary [::process::nodes info children]] [list  ::process::nodes::activityfinalnode1\
									   ::process::nodes::businessaction1\
									   ::process::nodes::businessaction2\
									   ::process::nodes::businessaction3\
									   ::process::nodes::businessaction4\
									   ::process::nodes::forknode1\
									   ::process::nodes::initialnode1\
									   ::process::nodes::joinnode1]}
      {my lequal [lsort -dictionary [::process::edges info children]] [list ::process::edges::controlflow1\
									   ::process::edges::controlflow2]}
      {my lequal [::process::nodes::initialnode1 info class] ::UML2::InitialNode}
      {my lequal [::process::nodes::initialnode1 outgoing] ::process::edges::controlflow1}
      {my lequal [::process::nodes::initialnode1 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction1 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction1 incoming] ::process::edges::controlflow1}
      {my lequal [::process::nodes::businessaction1 outgoing] ::process::edges::controlflow2}
      {my lequal [::process::nodes::businessaction1 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction2 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction2 incoming] ""}
      {my lequal [::process::nodes::businessaction2 outgoing] ""}
      {my lequal [::process::nodes::businessaction2 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction3 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction3 incoming] ""}
      {my lequal [::process::nodes::businessaction3 outgoing] ""}
      {my lequal [::process::nodes::businessaction3 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction4 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction4 incoming] ""}
      {my lequal [::process::nodes::businessaction4 outgoing] ""}
      {my lequal [::process::nodes::businessaction4 owning_graph] ::process}
      {my lequal [::process::nodes::forknode1 info class] ::UML2::ForkNode}
      {my lequal [::process::nodes::forknode1 incoming] ::process::edges::controlflow2}
      {my lequal [::process::nodes::forknode1 outgoing] ""}
      {my lequal [::process::nodes::forknode1 owning_graph] ::process}
      {my lequal [::process::nodes::joinnode1 info class] ::UML2::JoinNode}
      {my lequal [::process::nodes::joinnode1 incoming] ""}
      {my lequal [::process::nodes::joinnode1 outgoing] ""}
      {my lequal [::process::nodes::joinnode1 owning_graph] ::process}
      {my lequal [::process::nodes::activityfinalnode1 info class] ::UML2::ActivityFinalNode}
      {my lequal [::process::nodes::activityfinalnode1 incoming] ""}
      {my lequal [::process::nodes::activityfinalnode1 owning_graph] ::process}
      {my lequal [::process::edges::controlflow1 source] Start}
      {my lequal [::process::edges::controlflow1 source_type] ::UML2::InitialNode}
      {my lequal [::process::edges::controlflow1 target] A}      
      {my lequal [::process::edges::controlflow1 target_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow1 source_navigable] 0}
      {my lequal [::process::edges::controlflow1 target_navigable] 1}
      {my lequal [::process::edges::controlflow1 owning_graph] ::process}
      {my lequal [::process::edges::controlflow2 source] A}
      {my lequal [::process::edges::controlflow2 source_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow2 target] FN}      
      {my lequal [::process::edges::controlflow2 target_type] ::UML2::ForkNode}
      {my lequal [::process::edges::controlflow2 source_navigable] 0}
      {my lequal [::process::edges::controlflow2 target_navigable] 1}
      {my lequal [::process::edges::controlflow2 owning_graph] ::process}
    }
BA_ControlNodesForkJoinCF::AddControlFlowFail postconditions assign\
    { {my lequal [lsort -dictionary [::process::nodes info children]] [list  ::process::nodes::activityfinalnode1\
									   ::process::nodes::businessaction1\
									   ::process::nodes::businessaction2\
									   ::process::nodes::businessaction3\
									   ::process::nodes::businessaction4\
									   ::process::nodes::forknode1\
									   ::process::nodes::initialnode1\
									   ::process::nodes::joinnode1]}
      {my lequal [lsort -dictionary [::process::edges info children]] [list ::process::edges::controlflow1\
									   ::process::edges::controlflow2]}
      {my lequal [::process::nodes::initialnode1 info class] ::UML2::InitialNode}
      {my lequal [::process::nodes::initialnode1 outgoing] ::process::edges::controlflow1}
      {my lequal [::process::nodes::initialnode1 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction1 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction1 incoming] ::process::edges::controlflow1}
      {my lequal [::process::nodes::businessaction1 outgoing] ::process::edges::controlflow2}
      {my lequal [::process::nodes::businessaction1 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction2 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction2 incoming] ""}
      {my lequal [::process::nodes::businessaction2 outgoing] ""}
      {my lequal [::process::nodes::businessaction2 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction3 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction3 incoming] ""}
      {my lequal [::process::nodes::businessaction3 outgoing] ""}
      {my lequal [::process::nodes::businessaction3 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction4 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction4 incoming] ""}
      {my lequal [::process::nodes::businessaction4 outgoing] ""}
      {my lequal [::process::nodes::businessaction4 owning_graph] ::process}
      {my lequal [::process::nodes::forknode1 info class] ::UML2::ForkNode}
      {my lequal [::process::nodes::forknode1 incoming] ::process::edges::controlflow2}
      {my lequal [::process::nodes::forknode1 outgoing] ""}
      {my lequal [::process::nodes::forknode1 owning_graph] ::process}
      {my lequal [::process::nodes::joinnode1 info class] ::UML2::JoinNode}
      {my lequal [::process::nodes::joinnode1 incoming] ""}
      {my lequal [::process::nodes::joinnode1 outgoing] ""}
      {my lequal [::process::nodes::joinnode1 owning_graph] ::process}
      {my lequal [::process::nodes::activityfinalnode1 info class] ::UML2::ActivityFinalNode}
      {my lequal [::process::nodes::activityfinalnode1 incoming] ""}
      {my lequal [::process::nodes::activityfinalnode1 owning_graph] ::process}
      {my lequal [::process::edges::controlflow1 source] Start}
      {my lequal [::process::edges::controlflow1 source_type] ::UML2::InitialNode}
      {my lequal [::process::edges::controlflow1 target] A}      
      {my lequal [::process::edges::controlflow1 target_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow1 source_navigable] 0}
      {my lequal [::process::edges::controlflow1 target_navigable] 1}
      {my lequal [::process::edges::controlflow1 owning_graph] ::process}
      {my lequal [::process::edges::controlflow2 source] A}
      {my lequal [::process::edges::controlflow2 source_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow2 target] FN}      
      {my lequal [::process::edges::controlflow2 target_type] ::UML2::ForkNode}
      {my lequal [::process::edges::controlflow2 source_navigable] 0}
      {my lequal [::process::edges::controlflow2 target_navigable] 1}
      {my lequal [::process::edges::controlflow2 owning_graph] ::process}
    }
BA_ControlNodesForkJoinCF order add BA_ControlNodesForkJoinCF::AddControlFlowFail end


::STORM::TestScenario BA_ControlNodesForkJoinCF::AddObjFlowFail\
    -test_body {[::process addEdge ::UML2::ObjectFlow\
		    ::UML2::BusinessAction A\
		    ::UML2::ForkNode FN] success}\
    -expected_result 0
BA_ControlNodesForkJoinCF::AddObjFlowFail preconditions assign\
    { {my lequal [lsort -dictionary [::process::nodes info children]] [list  ::process::nodes::activityfinalnode1\
									   ::process::nodes::businessaction1\
									   ::process::nodes::businessaction2\
									   ::process::nodes::businessaction3\
									   ::process::nodes::businessaction4\
									   ::process::nodes::forknode1\
									   ::process::nodes::initialnode1\
									   ::process::nodes::joinnode1]}
      {my lequal [lsort -dictionary [::process::edges info children]] [list ::process::edges::controlflow1\
									   ::process::edges::controlflow2]}
      {my lequal [::process::nodes::initialnode1 info class] ::UML2::InitialNode}
      {my lequal [::process::nodes::initialnode1 outgoing] ::process::edges::controlflow1}
      {my lequal [::process::nodes::initialnode1 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction1 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction1 incoming] ::process::edges::controlflow1}
      {my lequal [::process::nodes::businessaction1 outgoing] ::process::edges::controlflow2}
      {my lequal [::process::nodes::businessaction1 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction2 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction2 incoming] ""}
      {my lequal [::process::nodes::businessaction2 outgoing] ""}
      {my lequal [::process::nodes::businessaction2 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction3 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction3 incoming] ""}
      {my lequal [::process::nodes::businessaction3 outgoing] ""}
      {my lequal [::process::nodes::businessaction3 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction4 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction4 incoming] ""}
      {my lequal [::process::nodes::businessaction4 outgoing] ""}
      {my lequal [::process::nodes::businessaction4 owning_graph] ::process}
      {my lequal [::process::nodes::forknode1 info class] ::UML2::ForkNode}
      {my lequal [::process::nodes::forknode1 incoming] ::process::edges::controlflow2}
      {my lequal [::process::nodes::forknode1 outgoing] ""}
      {my lequal [::process::nodes::forknode1 owning_graph] ::process}
      {my lequal [::process::nodes::joinnode1 info class] ::UML2::JoinNode}
      {my lequal [::process::nodes::joinnode1 incoming] ""}
      {my lequal [::process::nodes::joinnode1 outgoing] ""}
      {my lequal [::process::nodes::joinnode1 owning_graph] ::process}
      {my lequal [::process::nodes::activityfinalnode1 info class] ::UML2::ActivityFinalNode}
      {my lequal [::process::nodes::activityfinalnode1 incoming] ""}
      {my lequal [::process::nodes::activityfinalnode1 owning_graph] ::process}
      {my lequal [::process::edges::controlflow1 source] Start}
      {my lequal [::process::edges::controlflow1 source_type] ::UML2::InitialNode}
      {my lequal [::process::edges::controlflow1 target] A}      
      {my lequal [::process::edges::controlflow1 target_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow1 source_navigable] 0}
      {my lequal [::process::edges::controlflow1 target_navigable] 1}
      {my lequal [::process::edges::controlflow1 owning_graph] ::process}
      {my lequal [::process::edges::controlflow2 source] A}
      {my lequal [::process::edges::controlflow2 source_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow2 target] FN}      
      {my lequal [::process::edges::controlflow2 target_type] ::UML2::ForkNode}
      {my lequal [::process::edges::controlflow2 source_navigable] 0}
      {my lequal [::process::edges::controlflow2 target_navigable] 1}
      {my lequal [::process::edges::controlflow2 owning_graph] ::process}
    }
BA_ControlNodesForkJoinCF::AddObjFlowFail postconditions assign\
    { {my lequal [lsort -dictionary [::process::nodes info children]] [list  ::process::nodes::activityfinalnode1\
									   ::process::nodes::businessaction1\
									   ::process::nodes::businessaction2\
									   ::process::nodes::businessaction3\
									   ::process::nodes::businessaction4\
									   ::process::nodes::forknode1\
									   ::process::nodes::initialnode1\
									   ::process::nodes::joinnode1]}
      {my lequal [lsort -dictionary [::process::edges info children]] [list ::process::edges::controlflow1\
									   ::process::edges::controlflow2]}
      {my lequal [::process::nodes::initialnode1 info class] ::UML2::InitialNode}
      {my lequal [::process::nodes::initialnode1 outgoing] ::process::edges::controlflow1}
      {my lequal [::process::nodes::initialnode1 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction1 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction1 incoming] ::process::edges::controlflow1}
      {my lequal [::process::nodes::businessaction1 outgoing] ::process::edges::controlflow2}
      {my lequal [::process::nodes::businessaction1 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction2 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction2 incoming] ""}
      {my lequal [::process::nodes::businessaction2 outgoing] ""}
      {my lequal [::process::nodes::businessaction2 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction3 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction3 incoming] ""}
      {my lequal [::process::nodes::businessaction3 outgoing] ""}
      {my lequal [::process::nodes::businessaction3 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction4 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction4 incoming] ""}
      {my lequal [::process::nodes::businessaction4 outgoing] ""}
      {my lequal [::process::nodes::businessaction4 owning_graph] ::process}
      {my lequal [::process::nodes::forknode1 info class] ::UML2::ForkNode}
      {my lequal [::process::nodes::forknode1 incoming] ::process::edges::controlflow2}
      {my lequal [::process::nodes::forknode1 outgoing] ""}
      {my lequal [::process::nodes::forknode1 owning_graph] ::process}
      {my lequal [::process::nodes::joinnode1 info class] ::UML2::JoinNode}
      {my lequal [::process::nodes::joinnode1 incoming] ""}
      {my lequal [::process::nodes::joinnode1 outgoing] ""}
      {my lequal [::process::nodes::joinnode1 owning_graph] ::process}
      {my lequal [::process::nodes::activityfinalnode1 info class] ::UML2::ActivityFinalNode}
      {my lequal [::process::nodes::activityfinalnode1 incoming] ""}
      {my lequal [::process::nodes::activityfinalnode1 owning_graph] ::process}
      {my lequal [::process::edges::controlflow1 source] Start}
      {my lequal [::process::edges::controlflow1 source_type] ::UML2::InitialNode}
      {my lequal [::process::edges::controlflow1 target] A}      
      {my lequal [::process::edges::controlflow1 target_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow1 source_navigable] 0}
      {my lequal [::process::edges::controlflow1 target_navigable] 1}
      {my lequal [::process::edges::controlflow1 owning_graph] ::process}
      {my lequal [::process::edges::controlflow2 source] A}
      {my lequal [::process::edges::controlflow2 source_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow2 target] FN}      
      {my lequal [::process::edges::controlflow2 target_type] ::UML2::ForkNode}
      {my lequal [::process::edges::controlflow2 source_navigable] 0}
      {my lequal [::process::edges::controlflow2 target_navigable] 1}
      {my lequal [::process::edges::controlflow2 owning_graph] ::process}
    }
BA_ControlNodesForkJoinCF order add BA_ControlNodesForkJoinCF::AddObjFlowFail end



::STORM::TestScenario BA_ControlNodesForkJoinCF::AddObjFlowFail2\
    -test_body {[::process addEdge ::UML2::ObjectFlow\
		    ::UML2::ForkNode FN\
		    ::UML2::BusinessAction B] success}\
    -expected_result 0
BA_ControlNodesForkJoinCF::AddObjFlowFail2 preconditions assign\
    { {my lequal [lsort -dictionary [::process::nodes info children]] [list  ::process::nodes::activityfinalnode1\
									   ::process::nodes::businessaction1\
									   ::process::nodes::businessaction2\
									   ::process::nodes::businessaction3\
									   ::process::nodes::businessaction4\
									   ::process::nodes::forknode1\
									   ::process::nodes::initialnode1\
									   ::process::nodes::joinnode1]}
      {my lequal [lsort -dictionary [::process::edges info children]] [list ::process::edges::controlflow1\
									   ::process::edges::controlflow2]}
      {my lequal [::process::nodes::initialnode1 info class] ::UML2::InitialNode}
      {my lequal [::process::nodes::initialnode1 outgoing] ::process::edges::controlflow1}
      {my lequal [::process::nodes::initialnode1 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction1 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction1 incoming] ::process::edges::controlflow1}
      {my lequal [::process::nodes::businessaction1 outgoing] ::process::edges::controlflow2}
      {my lequal [::process::nodes::businessaction1 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction2 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction2 incoming] ""}
      {my lequal [::process::nodes::businessaction2 outgoing] ""}
      {my lequal [::process::nodes::businessaction2 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction3 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction3 incoming] ""}
      {my lequal [::process::nodes::businessaction3 outgoing] ""}
      {my lequal [::process::nodes::businessaction3 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction4 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction4 incoming] ""}
      {my lequal [::process::nodes::businessaction4 outgoing] ""}
      {my lequal [::process::nodes::businessaction4 owning_graph] ::process}
      {my lequal [::process::nodes::forknode1 info class] ::UML2::ForkNode}
      {my lequal [::process::nodes::forknode1 incoming] ::process::edges::controlflow2}
      {my lequal [::process::nodes::forknode1 outgoing] ""}
      {my lequal [::process::nodes::forknode1 owning_graph] ::process}
      {my lequal [::process::nodes::joinnode1 info class] ::UML2::JoinNode}
      {my lequal [::process::nodes::joinnode1 incoming] ""}
      {my lequal [::process::nodes::joinnode1 outgoing] ""}
      {my lequal [::process::nodes::joinnode1 owning_graph] ::process}
      {my lequal [::process::nodes::activityfinalnode1 info class] ::UML2::ActivityFinalNode}
      {my lequal [::process::nodes::activityfinalnode1 incoming] ""}
      {my lequal [::process::nodes::activityfinalnode1 owning_graph] ::process}
      {my lequal [::process::edges::controlflow1 source] Start}
      {my lequal [::process::edges::controlflow1 source_type] ::UML2::InitialNode}
      {my lequal [::process::edges::controlflow1 target] A}      
      {my lequal [::process::edges::controlflow1 target_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow1 source_navigable] 0}
      {my lequal [::process::edges::controlflow1 target_navigable] 1}
      {my lequal [::process::edges::controlflow1 owning_graph] ::process}
      {my lequal [::process::edges::controlflow2 source] A}
      {my lequal [::process::edges::controlflow2 source_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow2 target] FN}      
      {my lequal [::process::edges::controlflow2 target_type] ::UML2::ForkNode}
      {my lequal [::process::edges::controlflow2 source_navigable] 0}
      {my lequal [::process::edges::controlflow2 target_navigable] 1}
      {my lequal [::process::edges::controlflow2 owning_graph] ::process}
    }
BA_ControlNodesForkJoinCF::AddObjFlowFail2 postconditions assign\
    { {my lequal [lsort -dictionary [::process::nodes info children]] [list  ::process::nodes::activityfinalnode1\
									   ::process::nodes::businessaction1\
									   ::process::nodes::businessaction2\
									   ::process::nodes::businessaction3\
									   ::process::nodes::businessaction4\
									   ::process::nodes::forknode1\
									   ::process::nodes::initialnode1\
									   ::process::nodes::joinnode1]}
      {my lequal [lsort -dictionary [::process::edges info children]] [list ::process::edges::controlflow1\
									   ::process::edges::controlflow2]}
      {my lequal [::process::nodes::initialnode1 info class] ::UML2::InitialNode}
      {my lequal [::process::nodes::initialnode1 outgoing] ::process::edges::controlflow1}
      {my lequal [::process::nodes::initialnode1 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction1 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction1 incoming] ::process::edges::controlflow1}
      {my lequal [::process::nodes::businessaction1 outgoing] ::process::edges::controlflow2}
      {my lequal [::process::nodes::businessaction1 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction2 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction2 incoming] ""}
      {my lequal [::process::nodes::businessaction2 outgoing] ""}
      {my lequal [::process::nodes::businessaction2 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction3 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction3 incoming] ""}
      {my lequal [::process::nodes::businessaction3 outgoing] ""}
      {my lequal [::process::nodes::businessaction3 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction4 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction4 incoming] ""}
      {my lequal [::process::nodes::businessaction4 outgoing] ""}
      {my lequal [::process::nodes::businessaction4 owning_graph] ::process}
      {my lequal [::process::nodes::forknode1 info class] ::UML2::ForkNode}
      {my lequal [::process::nodes::forknode1 incoming] ::process::edges::controlflow2}
      {my lequal [::process::nodes::forknode1 outgoing] ""}
      {my lequal [::process::nodes::forknode1 owning_graph] ::process}
      {my lequal [::process::nodes::joinnode1 info class] ::UML2::JoinNode}
      {my lequal [::process::nodes::joinnode1 incoming] ""}
      {my lequal [::process::nodes::joinnode1 outgoing] ""}
      {my lequal [::process::nodes::joinnode1 owning_graph] ::process}
      {my lequal [::process::nodes::activityfinalnode1 info class] ::UML2::ActivityFinalNode}
      {my lequal [::process::nodes::activityfinalnode1 incoming] ""}
      {my lequal [::process::nodes::activityfinalnode1 owning_graph] ::process}
      {my lequal [::process::edges::controlflow1 source] Start}
      {my lequal [::process::edges::controlflow1 source_type] ::UML2::InitialNode}
      {my lequal [::process::edges::controlflow1 target] A}      
      {my lequal [::process::edges::controlflow1 target_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow1 source_navigable] 0}
      {my lequal [::process::edges::controlflow1 target_navigable] 1}
      {my lequal [::process::edges::controlflow1 owning_graph] ::process}
      {my lequal [::process::edges::controlflow2 source] A}
      {my lequal [::process::edges::controlflow2 source_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow2 target] FN}      
      {my lequal [::process::edges::controlflow2 target_type] ::UML2::ForkNode}
      {my lequal [::process::edges::controlflow2 source_navigable] 0}
      {my lequal [::process::edges::controlflow2 target_navigable] 1}
      {my lequal [::process::edges::controlflow2 owning_graph] ::process}
    }
BA_ControlNodesForkJoinCF order add BA_ControlNodesForkJoinCF::AddObjFlowFail2 end


::STORM::TestScenario BA_ControlNodesForkJoinCF::AddControlFlowSuccess2\
    -test_body {::process addEdge ::UML2::ControlFlow\
		    ::UML2::ForkNode FN\
		    ::UML2::BusinessAction B
      [::process addEdge ::UML2::ControlFlow\
		    ::UML2::ForkNode FN\
		    ::UML2::BusinessAction C] success}\
    -expected_result 1
BA_ControlNodesForkJoinCF::AddControlFlowSuccess2 preconditions assign\
    { {my lequal [lsort -dictionary [::process::nodes info children]] [list  ::process::nodes::activityfinalnode1\
									   ::process::nodes::businessaction1\
									   ::process::nodes::businessaction2\
									   ::process::nodes::businessaction3\
									   ::process::nodes::businessaction4\
									   ::process::nodes::forknode1\
									   ::process::nodes::initialnode1\
									   ::process::nodes::joinnode1]}
      {my lequal [lsort -dictionary [::process::edges info children]] [list ::process::edges::controlflow1\
									   ::process::edges::controlflow2]}
      {my lequal [::process::nodes::initialnode1 info class] ::UML2::InitialNode}
      {my lequal [::process::nodes::initialnode1 outgoing] ::process::edges::controlflow1}
      {my lequal [::process::nodes::initialnode1 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction1 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction1 incoming] ::process::edges::controlflow1}
      {my lequal [::process::nodes::businessaction1 outgoing] ::process::edges::controlflow2}
      {my lequal [::process::nodes::businessaction1 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction2 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction2 incoming] ""}
      {my lequal [::process::nodes::businessaction2 outgoing] ""}
      {my lequal [::process::nodes::businessaction2 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction3 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction3 incoming] ""}
      {my lequal [::process::nodes::businessaction3 outgoing] ""}
      {my lequal [::process::nodes::businessaction3 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction4 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction4 incoming] ""}
      {my lequal [::process::nodes::businessaction4 outgoing] ""}
      {my lequal [::process::nodes::businessaction4 owning_graph] ::process}
      {my lequal [::process::nodes::forknode1 info class] ::UML2::ForkNode}
      {my lequal [::process::nodes::forknode1 incoming] ::process::edges::controlflow2}
      {my lequal [::process::nodes::forknode1 outgoing] ""}
      {my lequal [::process::nodes::forknode1 owning_graph] ::process}
      {my lequal [::process::nodes::joinnode1 info class] ::UML2::JoinNode}
      {my lequal [::process::nodes::joinnode1 incoming] ""}
      {my lequal [::process::nodes::joinnode1 outgoing] ""}
      {my lequal [::process::nodes::joinnode1 owning_graph] ::process}
      {my lequal [::process::nodes::activityfinalnode1 info class] ::UML2::ActivityFinalNode}
      {my lequal [::process::nodes::activityfinalnode1 incoming] ""}
      {my lequal [::process::nodes::activityfinalnode1 owning_graph] ::process}
      {my lequal [::process::edges::controlflow1 source] Start}
      {my lequal [::process::edges::controlflow1 source_type] ::UML2::InitialNode}
      {my lequal [::process::edges::controlflow1 target] A}      
      {my lequal [::process::edges::controlflow1 target_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow1 source_navigable] 0}
      {my lequal [::process::edges::controlflow1 target_navigable] 1}
      {my lequal [::process::edges::controlflow1 owning_graph] ::process}
      {my lequal [::process::edges::controlflow2 source] A}
      {my lequal [::process::edges::controlflow2 source_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow2 target] FN}      
      {my lequal [::process::edges::controlflow2 target_type] ::UML2::ForkNode}
      {my lequal [::process::edges::controlflow2 source_navigable] 0}
      {my lequal [::process::edges::controlflow2 target_navigable] 1}
      {my lequal [::process::edges::controlflow2 owning_graph] ::process}
    }
BA_ControlNodesForkJoinCF::AddControlFlowSuccess2 postconditions assign\
    { {my lequal [lsort -dictionary [::process::nodes info children]] [list  ::process::nodes::activityfinalnode1\
									   ::process::nodes::businessaction1\
									   ::process::nodes::businessaction2\
									   ::process::nodes::businessaction3\
									   ::process::nodes::businessaction4\
									   ::process::nodes::forknode1\
									   ::process::nodes::initialnode1\
									   ::process::nodes::joinnode1]}
      {my lequal [lsort -dictionary [::process::edges info children]] [list ::process::edges::controlflow1\
									   ::process::edges::controlflow2\
									   ::process::edges::controlflow3\
									   ::process::edges::controlflow4]}
      {my lequal [::process::nodes::initialnode1 info class] ::UML2::InitialNode}
      {my lequal [::process::nodes::initialnode1 outgoing] ::process::edges::controlflow1}
      {my lequal [::process::nodes::initialnode1 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction1 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction1 incoming] ::process::edges::controlflow1}
      {my lequal [::process::nodes::businessaction1 outgoing] ::process::edges::controlflow2}
      {my lequal [::process::nodes::businessaction1 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction2 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction2 incoming] ::process::edges::controlflow3}
      {my lequal [::process::nodes::businessaction2 outgoing] ""}
      {my lequal [::process::nodes::businessaction2 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction3 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction3 incoming] ::process::edges::controlflow4}
      {my lequal [::process::nodes::businessaction3 outgoing] ""}
      {my lequal [::process::nodes::businessaction3 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction4 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction4 incoming] ""}
      {my lequal [::process::nodes::businessaction4 outgoing] ""}
      {my lequal [::process::nodes::businessaction4 owning_graph] ::process}
      {my lequal [::process::nodes::forknode1 info class] ::UML2::ForkNode}
      {my lequal [::process::nodes::forknode1 incoming] ::process::edges::controlflow2}
      {my lequal [::process::nodes::forknode1 outgoing] "::process::edges::controlflow3 ::process::edges::controlflow4"}
      {my lequal [::process::nodes::forknode1 owning_graph] ::process}
      {my lequal [::process::nodes::joinnode1 info class] ::UML2::JoinNode}
      {my lequal [::process::nodes::joinnode1 incoming] ""}
      {my lequal [::process::nodes::joinnode1 outgoing] ""}
      {my lequal [::process::nodes::joinnode1 owning_graph] ::process}
      {my lequal [::process::nodes::activityfinalnode1 info class] ::UML2::ActivityFinalNode}
      {my lequal [::process::nodes::activityfinalnode1 incoming] ""}
      {my lequal [::process::nodes::activityfinalnode1 owning_graph] ::process}
      {my lequal [::process::edges::controlflow1 source] Start}
      {my lequal [::process::edges::controlflow1 source_type] ::UML2::InitialNode}
      {my lequal [::process::edges::controlflow1 target] A}      
      {my lequal [::process::edges::controlflow1 target_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow1 source_navigable] 0}
      {my lequal [::process::edges::controlflow1 target_navigable] 1}
      {my lequal [::process::edges::controlflow1 owning_graph] ::process}
      {my lequal [::process::edges::controlflow2 source] A}
      {my lequal [::process::edges::controlflow2 source_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow2 target] FN}      
      {my lequal [::process::edges::controlflow2 target_type] ::UML2::ForkNode}
      {my lequal [::process::edges::controlflow2 source_navigable] 0}
      {my lequal [::process::edges::controlflow2 target_navigable] 1}
      {my lequal [::process::edges::controlflow2 owning_graph] ::process}
      {my lequal [::process::edges::controlflow3 source] FN}
      {my lequal [::process::edges::controlflow3 source_type] ::UML2::ForkNode}
      {my lequal [::process::edges::controlflow3 target] B}      
      {my lequal [::process::edges::controlflow3 target_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow3 source_navigable] 0}
      {my lequal [::process::edges::controlflow3 target_navigable] 1}
      {my lequal [::process::edges::controlflow3 owning_graph] ::process}
      {my lequal [::process::edges::controlflow4 source] FN}
      {my lequal [::process::edges::controlflow4 source_type] ::UML2::ForkNode}
      {my lequal [::process::edges::controlflow4 target] C}      
      {my lequal [::process::edges::controlflow4 target_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow4 source_navigable] 0}
      {my lequal [::process::edges::controlflow4 target_navigable] 1}
      {my lequal [::process::edges::controlflow4 owning_graph] ::process}
    }
BA_ControlNodesForkJoinCF order add BA_ControlNodesForkJoinCF::AddControlFlowSuccess2 end



::STORM::TestScenario BA_ControlNodesForkJoinCF::AddControlFlowSuccess3\
    -test_body {[::process addEdge ::UML2::ControlFlow\
		     ::UML2::BusinessAction B\
		     ::UML2::JoinNode JN] success}\
    -expected_result 1
BA_ControlNodesForkJoinCF::AddControlFlowSuccess3 preconditions assign\
    { {my lequal [lsort -dictionary [::process::nodes info children]] [list  ::process::nodes::activityfinalnode1\
									   ::process::nodes::businessaction1\
									   ::process::nodes::businessaction2\
									   ::process::nodes::businessaction3\
									   ::process::nodes::businessaction4\
									   ::process::nodes::forknode1\
									   ::process::nodes::initialnode1\
									   ::process::nodes::joinnode1]}
      {my lequal [lsort -dictionary [::process::edges info children]] [list ::process::edges::controlflow1\
									   ::process::edges::controlflow2\
									   ::process::edges::controlflow3\
									   ::process::edges::controlflow4]}
      {my lequal [::process::nodes::initialnode1 info class] ::UML2::InitialNode}
      {my lequal [::process::nodes::initialnode1 outgoing] ::process::edges::controlflow1}
      {my lequal [::process::nodes::initialnode1 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction1 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction1 incoming] ::process::edges::controlflow1}
      {my lequal [::process::nodes::businessaction1 outgoing] ::process::edges::controlflow2}
      {my lequal [::process::nodes::businessaction1 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction2 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction2 incoming] ::process::edges::controlflow3}
      {my lequal [::process::nodes::businessaction2 outgoing] ""}
      {my lequal [::process::nodes::businessaction2 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction3 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction3 incoming] ::process::edges::controlflow4}
      {my lequal [::process::nodes::businessaction3 outgoing] ""}
      {my lequal [::process::nodes::businessaction3 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction4 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction4 incoming] ""}
      {my lequal [::process::nodes::businessaction4 outgoing] ""}
      {my lequal [::process::nodes::businessaction4 owning_graph] ::process}
      {my lequal [::process::nodes::forknode1 info class] ::UML2::ForkNode}
      {my lequal [::process::nodes::forknode1 incoming] ::process::edges::controlflow2}
      {my lequal [::process::nodes::forknode1 outgoing] "::process::edges::controlflow3 ::process::edges::controlflow4"}
      {my lequal [::process::nodes::forknode1 owning_graph] ::process}
      {my lequal [::process::nodes::joinnode1 info class] ::UML2::JoinNode}
      {my lequal [::process::nodes::joinnode1 incoming] ""}
      {my lequal [::process::nodes::joinnode1 outgoing] ""}
      {my lequal [::process::nodes::joinnode1 owning_graph] ::process}
      {my lequal [::process::nodes::activityfinalnode1 info class] ::UML2::ActivityFinalNode}
      {my lequal [::process::nodes::activityfinalnode1 incoming] ""}
      {my lequal [::process::nodes::activityfinalnode1 owning_graph] ::process}
      {my lequal [::process::edges::controlflow1 source] Start}
      {my lequal [::process::edges::controlflow1 source_type] ::UML2::InitialNode}
      {my lequal [::process::edges::controlflow1 target] A}      
      {my lequal [::process::edges::controlflow1 target_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow1 source_navigable] 0}
      {my lequal [::process::edges::controlflow1 target_navigable] 1}
      {my lequal [::process::edges::controlflow1 owning_graph] ::process}
      {my lequal [::process::edges::controlflow2 source] A}
      {my lequal [::process::edges::controlflow2 source_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow2 target] FN}      
      {my lequal [::process::edges::controlflow2 target_type] ::UML2::ForkNode}
      {my lequal [::process::edges::controlflow2 source_navigable] 0}
      {my lequal [::process::edges::controlflow2 target_navigable] 1}
      {my lequal [::process::edges::controlflow2 owning_graph] ::process}
      {my lequal [::process::edges::controlflow3 source] FN}
      {my lequal [::process::edges::controlflow3 source_type] ::UML2::ForkNode}
      {my lequal [::process::edges::controlflow3 target] B}      
      {my lequal [::process::edges::controlflow3 target_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow3 source_navigable] 0}
      {my lequal [::process::edges::controlflow3 target_navigable] 1}
      {my lequal [::process::edges::controlflow3 owning_graph] ::process}
      {my lequal [::process::edges::controlflow4 source] FN}
      {my lequal [::process::edges::controlflow4 source_type] ::UML2::ForkNode}
      {my lequal [::process::edges::controlflow4 target] C}      
      {my lequal [::process::edges::controlflow4 target_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow4 source_navigable] 0}
      {my lequal [::process::edges::controlflow4 target_navigable] 1}
      {my lequal [::process::edges::controlflow4 owning_graph] ::process}
    }
BA_ControlNodesForkJoinCF::AddControlFlowSuccess3 postconditions assign\
    { {my lequal [lsort -dictionary [::process::nodes info children]] [list  ::process::nodes::activityfinalnode1\
									   ::process::nodes::businessaction1\
									   ::process::nodes::businessaction2\
									   ::process::nodes::businessaction3\
									   ::process::nodes::businessaction4\
									   ::process::nodes::forknode1\
									   ::process::nodes::initialnode1\
									   ::process::nodes::joinnode1]}
      {my lequal [lsort -dictionary [::process::edges info children]] [list ::process::edges::controlflow1\
									   ::process::edges::controlflow2\
								 	   ::process::edges::controlflow3\
								 	   ::process::edges::controlflow4\
									   ::process::edges::controlflow5]}
      {my lequal [::process::nodes::initialnode1 info class] ::UML2::InitialNode}
      {my lequal [::process::nodes::initialnode1 outgoing] ::process::edges::controlflow1}
      {my lequal [::process::nodes::initialnode1 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction1 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction1 incoming] ::process::edges::controlflow1}
      {my lequal [::process::nodes::businessaction1 outgoing] ::process::edges::controlflow2}
      {my lequal [::process::nodes::businessaction1 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction2 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction2 incoming] ::process::edges::controlflow3}
      {my lequal [::process::nodes::businessaction2 outgoing] ::process::edges::controlflow5}
      {my lequal [::process::nodes::businessaction2 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction3 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction3 incoming] ::process::edges::controlflow4}
      {my lequal [::process::nodes::businessaction3 outgoing] ""}
      {my lequal [::process::nodes::businessaction3 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction4 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction4 incoming] ""}
      {my lequal [::process::nodes::businessaction4 outgoing] ""}
      {my lequal [::process::nodes::businessaction4 owning_graph] ::process}
      {my lequal [::process::nodes::forknode1 info class] ::UML2::ForkNode}
      {my lequal [::process::nodes::forknode1 incoming] ::process::edges::controlflow2}
      {my lequal [::process::nodes::forknode1 outgoing] "::process::edges::controlflow3 ::process::edges::controlflow4"}
      {my lequal [::process::nodes::forknode1 owning_graph] ::process}
      {my lequal [::process::nodes::joinnode1 info class] ::UML2::JoinNode}
      {my lequal [::process::nodes::joinnode1 incoming] ::process::edges::controlflow5}
      {my lequal [::process::nodes::joinnode1 outgoing] ""}
      {my lequal [::process::nodes::joinnode1 owning_graph] ::process}
      {my lequal [::process::nodes::activityfinalnode1 info class] ::UML2::ActivityFinalNode}
      {my lequal [::process::nodes::activityfinalnode1 incoming] ""}
      {my lequal [::process::nodes::activityfinalnode1 owning_graph] ::process}
      {my lequal [::process::edges::controlflow1 source] Start}
      {my lequal [::process::edges::controlflow1 source_type] ::UML2::InitialNode}
      {my lequal [::process::edges::controlflow1 target] A}      
      {my lequal [::process::edges::controlflow1 target_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow1 source_navigable] 0}
      {my lequal [::process::edges::controlflow1 target_navigable] 1}
      {my lequal [::process::edges::controlflow1 owning_graph] ::process}
      {my lequal [::process::edges::controlflow2 source] A}
      {my lequal [::process::edges::controlflow2 source_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow2 target] FN}      
      {my lequal [::process::edges::controlflow2 target_type] ::UML2::ForkNode}
      {my lequal [::process::edges::controlflow2 source_navigable] 0}
      {my lequal [::process::edges::controlflow2 target_navigable] 1}
      {my lequal [::process::edges::controlflow2 owning_graph] ::process}
      {my lequal [::process::edges::controlflow3 source] FN}
      {my lequal [::process::edges::controlflow3 source_type] ::UML2::ForkNode}
      {my lequal [::process::edges::controlflow3 target] B}      
      {my lequal [::process::edges::controlflow3 target_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow3 source_navigable] 0}
      {my lequal [::process::edges::controlflow3 target_navigable] 1}
      {my lequal [::process::edges::controlflow3 owning_graph] ::process}
      {my lequal [::process::edges::controlflow4 source] FN}
      {my lequal [::process::edges::controlflow4 source_type] ::UML2::ForkNode}
      {my lequal [::process::edges::controlflow4 target] C}      
      {my lequal [::process::edges::controlflow4 target_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow4 source_navigable] 0}
      {my lequal [::process::edges::controlflow4 target_navigable] 1}
      {my lequal [::process::edges::controlflow4 owning_graph] ::process}
      {my lequal [::process::edges::controlflow5 source] B}
      {my lequal [::process::edges::controlflow5 source_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow5 target] JN}      
      {my lequal [::process::edges::controlflow5 target_type] ::UML2::JoinNode}
      {my lequal [::process::edges::controlflow5 source_navigable] 0}
      {my lequal [::process::edges::controlflow5 target_navigable] 1}
      {my lequal [::process::edges::controlflow5 owning_graph] ::process}
    }
BA_ControlNodesForkJoinCF order add BA_ControlNodesForkJoinCF::AddControlFlowSuccess3 end



::STORM::TestScenario BA_ControlNodesForkJoinCF::AddObjFlowFail3\
    -test_body {[::process addEdge ::UML2::ObjectFlow\
		     ::UML2::JoinNode JN\
		     ::UML2::BusinessAction D] success}\
    -expected_result 0
BA_ControlNodesForkJoinCF::AddObjFlowFail3 preconditions assign\
    { {my lequal [lsort -dictionary [::process::nodes info children]] [list  ::process::nodes::activityfinalnode1\
									   ::process::nodes::businessaction1\
									   ::process::nodes::businessaction2\
									   ::process::nodes::businessaction3\
									   ::process::nodes::businessaction4\
									   ::process::nodes::forknode1\
									   ::process::nodes::initialnode1\
									   ::process::nodes::joinnode1]}
      {my lequal [lsort -dictionary [::process::edges info children]] [list ::process::edges::controlflow1\
									   ::process::edges::controlflow2\
								 	   ::process::edges::controlflow3\
								 	   ::process::edges::controlflow4\
									   ::process::edges::controlflow5]}
      {my lequal [::process::nodes::initialnode1 info class] ::UML2::InitialNode}
      {my lequal [::process::nodes::initialnode1 outgoing] ::process::edges::controlflow1}
      {my lequal [::process::nodes::initialnode1 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction1 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction1 incoming] ::process::edges::controlflow1}
      {my lequal [::process::nodes::businessaction1 outgoing] ::process::edges::controlflow2}
      {my lequal [::process::nodes::businessaction1 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction2 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction2 incoming] ::process::edges::controlflow3}
      {my lequal [::process::nodes::businessaction2 outgoing] ::process::edges::controlflow5}
      {my lequal [::process::nodes::businessaction2 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction3 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction3 incoming] ::process::edges::controlflow4}
      {my lequal [::process::nodes::businessaction3 outgoing] ""}
      {my lequal [::process::nodes::businessaction3 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction4 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction4 incoming] ""}
      {my lequal [::process::nodes::businessaction4 outgoing] ""}
      {my lequal [::process::nodes::businessaction4 owning_graph] ::process}
      {my lequal [::process::nodes::forknode1 info class] ::UML2::ForkNode}
      {my lequal [::process::nodes::forknode1 incoming] ::process::edges::controlflow2}
      {my lequal [::process::nodes::forknode1 outgoing] "::process::edges::controlflow3 ::process::edges::controlflow4"}
      {my lequal [::process::nodes::forknode1 owning_graph] ::process}
      {my lequal [::process::nodes::joinnode1 info class] ::UML2::JoinNode}
      {my lequal [::process::nodes::joinnode1 incoming] ::process::edges::controlflow5}
      {my lequal [::process::nodes::joinnode1 outgoing] ""}
      {my lequal [::process::nodes::joinnode1 owning_graph] ::process}
      {my lequal [::process::nodes::activityfinalnode1 info class] ::UML2::ActivityFinalNode}
      {my lequal [::process::nodes::activityfinalnode1 incoming] ""}
      {my lequal [::process::nodes::activityfinalnode1 owning_graph] ::process}
      {my lequal [::process::edges::controlflow1 source] Start}
      {my lequal [::process::edges::controlflow1 source_type] ::UML2::InitialNode}
      {my lequal [::process::edges::controlflow1 target] A}      
      {my lequal [::process::edges::controlflow1 target_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow1 source_navigable] 0}
      {my lequal [::process::edges::controlflow1 target_navigable] 1}
      {my lequal [::process::edges::controlflow1 owning_graph] ::process}
      {my lequal [::process::edges::controlflow2 source] A}
      {my lequal [::process::edges::controlflow2 source_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow2 target] FN}      
      {my lequal [::process::edges::controlflow2 target_type] ::UML2::ForkNode}
      {my lequal [::process::edges::controlflow2 source_navigable] 0}
      {my lequal [::process::edges::controlflow2 target_navigable] 1}
      {my lequal [::process::edges::controlflow2 owning_graph] ::process}
      {my lequal [::process::edges::controlflow3 source] FN}
      {my lequal [::process::edges::controlflow3 source_type] ::UML2::ForkNode}
      {my lequal [::process::edges::controlflow3 target] B}      
      {my lequal [::process::edges::controlflow3 target_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow3 source_navigable] 0}
      {my lequal [::process::edges::controlflow3 target_navigable] 1}
      {my lequal [::process::edges::controlflow3 owning_graph] ::process}
      {my lequal [::process::edges::controlflow4 source] FN}
      {my lequal [::process::edges::controlflow4 source_type] ::UML2::ForkNode}
      {my lequal [::process::edges::controlflow4 target] C}      
      {my lequal [::process::edges::controlflow4 target_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow4 source_navigable] 0}
      {my lequal [::process::edges::controlflow4 target_navigable] 1}
      {my lequal [::process::edges::controlflow4 owning_graph] ::process}
      {my lequal [::process::edges::controlflow5 source] B}
      {my lequal [::process::edges::controlflow5 source_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow5 target] JN}      
      {my lequal [::process::edges::controlflow5 target_type] ::UML2::JoinNode}
      {my lequal [::process::edges::controlflow5 source_navigable] 0}
      {my lequal [::process::edges::controlflow5 target_navigable] 1}
      {my lequal [::process::edges::controlflow5 owning_graph] ::process}
    }
BA_ControlNodesForkJoinCF::AddObjFlowFail3 postconditions assign\
    { {my lequal [lsort -dictionary [::process::nodes info children]] [list  ::process::nodes::activityfinalnode1\
									   ::process::nodes::businessaction1\
									   ::process::nodes::businessaction2\
									   ::process::nodes::businessaction3\
									   ::process::nodes::businessaction4\
									   ::process::nodes::forknode1\
									   ::process::nodes::initialnode1\
									   ::process::nodes::joinnode1]}
      {my lequal [lsort -dictionary [::process::edges info children]] [list ::process::edges::controlflow1\
									   ::process::edges::controlflow2\
								 	   ::process::edges::controlflow3\
								 	   ::process::edges::controlflow4\
									   ::process::edges::controlflow5]}
      {my lequal [::process::nodes::initialnode1 info class] ::UML2::InitialNode}
      {my lequal [::process::nodes::initialnode1 outgoing] ::process::edges::controlflow1}
      {my lequal [::process::nodes::initialnode1 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction1 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction1 incoming] ::process::edges::controlflow1}
      {my lequal [::process::nodes::businessaction1 outgoing] ::process::edges::controlflow2}
      {my lequal [::process::nodes::businessaction1 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction2 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction2 incoming] ::process::edges::controlflow3}
      {my lequal [::process::nodes::businessaction2 outgoing] ::process::edges::controlflow5}
      {my lequal [::process::nodes::businessaction2 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction3 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction3 incoming] ::process::edges::controlflow4}
      {my lequal [::process::nodes::businessaction3 outgoing] ""}
      {my lequal [::process::nodes::businessaction3 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction4 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction4 incoming] ""}
      {my lequal [::process::nodes::businessaction4 outgoing] ""}
      {my lequal [::process::nodes::businessaction4 owning_graph] ::process}
      {my lequal [::process::nodes::forknode1 info class] ::UML2::ForkNode}
      {my lequal [::process::nodes::forknode1 incoming] ::process::edges::controlflow2}
      {my lequal [::process::nodes::forknode1 outgoing] "::process::edges::controlflow3 ::process::edges::controlflow4"}
      {my lequal [::process::nodes::forknode1 owning_graph] ::process}
      {my lequal [::process::nodes::joinnode1 info class] ::UML2::JoinNode}
      {my lequal [::process::nodes::joinnode1 incoming] ::process::edges::controlflow5}
      {my lequal [::process::nodes::joinnode1 outgoing] ""}
      {my lequal [::process::nodes::joinnode1 owning_graph] ::process}
      {my lequal [::process::nodes::activityfinalnode1 info class] ::UML2::ActivityFinalNode}
      {my lequal [::process::nodes::activityfinalnode1 incoming] ""}
      {my lequal [::process::nodes::activityfinalnode1 owning_graph] ::process}
      {my lequal [::process::edges::controlflow1 source] Start}
      {my lequal [::process::edges::controlflow1 source_type] ::UML2::InitialNode}
      {my lequal [::process::edges::controlflow1 target] A}      
      {my lequal [::process::edges::controlflow1 target_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow1 source_navigable] 0}
      {my lequal [::process::edges::controlflow1 target_navigable] 1}
      {my lequal [::process::edges::controlflow1 owning_graph] ::process}
      {my lequal [::process::edges::controlflow2 source] A}
      {my lequal [::process::edges::controlflow2 source_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow2 target] FN}      
      {my lequal [::process::edges::controlflow2 target_type] ::UML2::ForkNode}
      {my lequal [::process::edges::controlflow2 source_navigable] 0}
      {my lequal [::process::edges::controlflow2 target_navigable] 1}
      {my lequal [::process::edges::controlflow2 owning_graph] ::process}
      {my lequal [::process::edges::controlflow3 source] FN}
      {my lequal [::process::edges::controlflow3 source_type] ::UML2::ForkNode}
      {my lequal [::process::edges::controlflow3 target] B}      
      {my lequal [::process::edges::controlflow3 target_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow3 source_navigable] 0}
      {my lequal [::process::edges::controlflow3 target_navigable] 1}
      {my lequal [::process::edges::controlflow3 owning_graph] ::process}
      {my lequal [::process::edges::controlflow4 source] FN}
      {my lequal [::process::edges::controlflow4 source_type] ::UML2::ForkNode}
      {my lequal [::process::edges::controlflow4 target] C}      
      {my lequal [::process::edges::controlflow4 target_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow4 source_navigable] 0}
      {my lequal [::process::edges::controlflow4 target_navigable] 1}
      {my lequal [::process::edges::controlflow4 owning_graph] ::process}
      {my lequal [::process::edges::controlflow5 source] B}
      {my lequal [::process::edges::controlflow5 source_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow5 target] JN}      
      {my lequal [::process::edges::controlflow5 target_type] ::UML2::JoinNode}
      {my lequal [::process::edges::controlflow5 source_navigable] 0}
      {my lequal [::process::edges::controlflow5 target_navigable] 1}
      {my lequal [::process::edges::controlflow5 owning_graph] ::process}
    }
BA_ControlNodesForkJoinCF order add BA_ControlNodesForkJoinCF::AddObjFlowFail3 end



::STORM::TestScenario BA_ControlNodesForkJoinCF::AddControlFlowSuccess4\
    -test_body {::process addEdge ::UML2::ControlFlow\
		     ::UML2::BusinessAction C\
		     ::UML2::JoinNode JN
      [::process addEdge ::UML2::ControlFlow\
		     ::UML2::JoinNode JN\
		     ::UML2::BusinessAction D] success}\
    -expected_result 1
BA_ControlNodesForkJoinCF::AddControlFlowSuccess4 preconditions assign\
    { {my lequal [lsort -dictionary [::process::nodes info children]] [list  ::process::nodes::activityfinalnode1\
									   ::process::nodes::businessaction1\
									   ::process::nodes::businessaction2\
									   ::process::nodes::businessaction3\
									   ::process::nodes::businessaction4\
									   ::process::nodes::forknode1\
									   ::process::nodes::initialnode1\
									   ::process::nodes::joinnode1]}
      {my lequal [lsort -dictionary [::process::edges info children]] [list ::process::edges::controlflow1\
									   ::process::edges::controlflow2\
								 	   ::process::edges::controlflow3\
								 	   ::process::edges::controlflow4\
									   ::process::edges::controlflow5]}
      {my lequal [::process::nodes::initialnode1 info class] ::UML2::InitialNode}
      {my lequal [::process::nodes::initialnode1 outgoing] ::process::edges::controlflow1}
      {my lequal [::process::nodes::initialnode1 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction1 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction1 incoming] ::process::edges::controlflow1}
      {my lequal [::process::nodes::businessaction1 outgoing] ::process::edges::controlflow2}
      {my lequal [::process::nodes::businessaction1 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction2 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction2 incoming] ::process::edges::controlflow3}
      {my lequal [::process::nodes::businessaction2 outgoing] ::process::edges::controlflow5}
      {my lequal [::process::nodes::businessaction2 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction3 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction3 incoming] ::process::edges::controlflow4}
      {my lequal [::process::nodes::businessaction3 outgoing] ""}
      {my lequal [::process::nodes::businessaction3 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction4 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction4 incoming] ""}
      {my lequal [::process::nodes::businessaction4 outgoing] ""}
      {my lequal [::process::nodes::businessaction4 owning_graph] ::process}
      {my lequal [::process::nodes::forknode1 info class] ::UML2::ForkNode}
      {my lequal [::process::nodes::forknode1 incoming] ::process::edges::controlflow2}
      {my lequal [::process::nodes::forknode1 outgoing] "::process::edges::controlflow3 ::process::edges::controlflow4"}
      {my lequal [::process::nodes::forknode1 owning_graph] ::process}
      {my lequal [::process::nodes::joinnode1 info class] ::UML2::JoinNode}
      {my lequal [::process::nodes::joinnode1 incoming] ::process::edges::controlflow5}
      {my lequal [::process::nodes::joinnode1 outgoing] ""}
      {my lequal [::process::nodes::joinnode1 owning_graph] ::process}
      {my lequal [::process::nodes::activityfinalnode1 info class] ::UML2::ActivityFinalNode}
      {my lequal [::process::nodes::activityfinalnode1 incoming] ""}
      {my lequal [::process::nodes::activityfinalnode1 owning_graph] ::process}
      {my lequal [::process::edges::controlflow1 source] Start}
      {my lequal [::process::edges::controlflow1 source_type] ::UML2::InitialNode}
      {my lequal [::process::edges::controlflow1 target] A}      
      {my lequal [::process::edges::controlflow1 target_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow1 source_navigable] 0}
      {my lequal [::process::edges::controlflow1 target_navigable] 1}
      {my lequal [::process::edges::controlflow1 owning_graph] ::process}
      {my lequal [::process::edges::controlflow2 source] A}
      {my lequal [::process::edges::controlflow2 source_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow2 target] FN}      
      {my lequal [::process::edges::controlflow2 target_type] ::UML2::ForkNode}
      {my lequal [::process::edges::controlflow2 source_navigable] 0}
      {my lequal [::process::edges::controlflow2 target_navigable] 1}
      {my lequal [::process::edges::controlflow2 owning_graph] ::process}
      {my lequal [::process::edges::controlflow3 source] FN}
      {my lequal [::process::edges::controlflow3 source_type] ::UML2::ForkNode}
      {my lequal [::process::edges::controlflow3 target] B}      
      {my lequal [::process::edges::controlflow3 target_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow3 source_navigable] 0}
      {my lequal [::process::edges::controlflow3 target_navigable] 1}
      {my lequal [::process::edges::controlflow3 owning_graph] ::process}
      {my lequal [::process::edges::controlflow4 source] FN}
      {my lequal [::process::edges::controlflow4 source_type] ::UML2::ForkNode}
      {my lequal [::process::edges::controlflow4 target] C}      
      {my lequal [::process::edges::controlflow4 target_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow4 source_navigable] 0}
      {my lequal [::process::edges::controlflow4 target_navigable] 1}
      {my lequal [::process::edges::controlflow4 owning_graph] ::process}
      {my lequal [::process::edges::controlflow5 source] B}
      {my lequal [::process::edges::controlflow5 source_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow5 target] JN}      
      {my lequal [::process::edges::controlflow5 target_type] ::UML2::JoinNode}
      {my lequal [::process::edges::controlflow5 source_navigable] 0}
      {my lequal [::process::edges::controlflow5 target_navigable] 1}
      {my lequal [::process::edges::controlflow5 owning_graph] ::process}
    }
BA_ControlNodesForkJoinCF::AddControlFlowSuccess4 postconditions assign\
    { {my lequal [lsort -dictionary [::process::nodes info children]] [list  ::process::nodes::activityfinalnode1\
									   ::process::nodes::businessaction1\
									   ::process::nodes::businessaction2\
									   ::process::nodes::businessaction3\
									   ::process::nodes::businessaction4\
									   ::process::nodes::forknode1\
									   ::process::nodes::initialnode1\
									   ::process::nodes::joinnode1]}
      {my lequal [lsort -dictionary [::process::edges info children]] [list ::process::edges::controlflow1\
									   ::process::edges::controlflow2\
								 	   ::process::edges::controlflow3\
								 	   ::process::edges::controlflow4\
								 	   ::process::edges::controlflow5\
									   ::process::edges::controlflow6\
								 	   ::process::edges::controlflow7]}
      {my lequal [::process::nodes::initialnode1 info class] ::UML2::InitialNode}
      {my lequal [::process::nodes::initialnode1 outgoing] ::process::edges::controlflow1}
      {my lequal [::process::nodes::initialnode1 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction1 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction1 incoming] ::process::edges::controlflow1}
      {my lequal [::process::nodes::businessaction1 outgoing] ::process::edges::controlflow2}
      {my lequal [::process::nodes::businessaction1 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction2 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction2 incoming] ::process::edges::controlflow3}
      {my lequal [::process::nodes::businessaction2 outgoing] ::process::edges::controlflow5}
      {my lequal [::process::nodes::businessaction2 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction3 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction3 incoming] ::process::edges::controlflow4}
      {my lequal [::process::nodes::businessaction3 outgoing] ::process::edges::controlflow6}
      {my lequal [::process::nodes::businessaction3 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction4 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction4 incoming] ::process::edges::controlflow7}
      {my lequal [::process::nodes::businessaction4 outgoing] ""}
      {my lequal [::process::nodes::businessaction4 owning_graph] ::process}
      {my lequal [::process::nodes::forknode1 info class] ::UML2::ForkNode}
      {my lequal [::process::nodes::forknode1 incoming] ::process::edges::controlflow2}
      {my lequal [::process::nodes::forknode1 outgoing] "::process::edges::controlflow3 ::process::edges::controlflow4"}
      {my lequal [::process::nodes::forknode1 owning_graph] ::process}
      {my lequal [::process::nodes::joinnode1 info class] ::UML2::JoinNode}
      {my lequal [::process::nodes::joinnode1 incoming] "::process::edges::controlflow5 ::process::edges::controlflow6"}
      {my lequal [::process::nodes::joinnode1 outgoing] ::process::edges::controlflow7}
      {my lequal [::process::nodes::joinnode1 owning_graph] ::process}
      {my lequal [::process::nodes::activityfinalnode1 info class] ::UML2::ActivityFinalNode}
      {my lequal [::process::nodes::activityfinalnode1 incoming] ""}
      {my lequal [::process::nodes::activityfinalnode1 owning_graph] ::process}
      {my lequal [::process::edges::controlflow1 source] Start}
      {my lequal [::process::edges::controlflow1 source_type] ::UML2::InitialNode}
      {my lequal [::process::edges::controlflow1 target] A}      
      {my lequal [::process::edges::controlflow1 target_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow1 source_navigable] 0}
      {my lequal [::process::edges::controlflow1 target_navigable] 1}
      {my lequal [::process::edges::controlflow1 owning_graph] ::process}
      {my lequal [::process::edges::controlflow2 source] A}
      {my lequal [::process::edges::controlflow2 source_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow2 target] FN}      
      {my lequal [::process::edges::controlflow2 target_type] ::UML2::ForkNode}
      {my lequal [::process::edges::controlflow2 source_navigable] 0}
      {my lequal [::process::edges::controlflow2 target_navigable] 1}
      {my lequal [::process::edges::controlflow2 owning_graph] ::process}
      {my lequal [::process::edges::controlflow3 source] FN}
      {my lequal [::process::edges::controlflow3 source_type] ::UML2::ForkNode}
      {my lequal [::process::edges::controlflow3 target] B}      
      {my lequal [::process::edges::controlflow3 target_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow3 source_navigable] 0}
      {my lequal [::process::edges::controlflow3 target_navigable] 1}
      {my lequal [::process::edges::controlflow3 owning_graph] ::process}
      {my lequal [::process::edges::controlflow4 source] FN}
      {my lequal [::process::edges::controlflow4 source_type] ::UML2::ForkNode}
      {my lequal [::process::edges::controlflow4 target] C}      
      {my lequal [::process::edges::controlflow4 target_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow4 source_navigable] 0}
      {my lequal [::process::edges::controlflow4 target_navigable] 1}
      {my lequal [::process::edges::controlflow4 owning_graph] ::process}
      {my lequal [::process::edges::controlflow5 source] B}
      {my lequal [::process::edges::controlflow5 source_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow5 target] JN}      
      {my lequal [::process::edges::controlflow5 target_type] ::UML2::JoinNode}
      {my lequal [::process::edges::controlflow5 source_navigable] 0}
      {my lequal [::process::edges::controlflow5 target_navigable] 1}
      {my lequal [::process::edges::controlflow5 owning_graph] ::process}
      {my lequal [::process::edges::controlflow6 source] C}
      {my lequal [::process::edges::controlflow6 source_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow6 target] JN}      
      {my lequal [::process::edges::controlflow6 target_type] ::UML2::JoinNode}
      {my lequal [::process::edges::controlflow6 source_navigable] 0}
      {my lequal [::process::edges::controlflow6 target_navigable] 1}
      {my lequal [::process::edges::controlflow6 owning_graph] ::process}
      {my lequal [::process::edges::controlflow7 source] JN}
      {my lequal [::process::edges::controlflow7 source_type] ::UML2::JoinNode}
      {my lequal [::process::edges::controlflow7 target] D}      
      {my lequal [::process::edges::controlflow7 target_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow7 source_navigable] 0}
      {my lequal [::process::edges::controlflow7 target_navigable] 1}
      {my lequal [::process::edges::controlflow7 owning_graph] ::process}
    }
BA_ControlNodesForkJoinCF order add BA_ControlNodesForkJoinCF::AddControlFlowSuccess4 end


::STORM::TestScenario BA_ControlNodesForkJoinCF::AddControlFlowFail2\
    -test_body {[::process addEdge ::UML2::ControlFlow\
		     ::UML2::JoinNode JN\
		     ::UML2::BusinessAction D] success}\
    -expected_result 0
BA_ControlNodesForkJoinCF::AddControlFlowFail2 preconditions assign\
    { {my lequal [lsort -dictionary [::process::nodes info children]] [list  ::process::nodes::activityfinalnode1\
									   ::process::nodes::businessaction1\
									   ::process::nodes::businessaction2\
									   ::process::nodes::businessaction3\
									   ::process::nodes::businessaction4\
									   ::process::nodes::forknode1\
									   ::process::nodes::initialnode1\
									   ::process::nodes::joinnode1]}
      {my lequal [lsort -dictionary [::process::edges info children]] [list ::process::edges::controlflow1\
									   ::process::edges::controlflow2\
								 	   ::process::edges::controlflow3\
								 	   ::process::edges::controlflow4\
								 	   ::process::edges::controlflow5\
									   ::process::edges::controlflow6\
								 	   ::process::edges::controlflow7]}
      {my lequal [::process::nodes::initialnode1 info class] ::UML2::InitialNode}
      {my lequal [::process::nodes::initialnode1 outgoing] ::process::edges::controlflow1}
      {my lequal [::process::nodes::initialnode1 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction1 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction1 incoming] ::process::edges::controlflow1}
      {my lequal [::process::nodes::businessaction1 outgoing] ::process::edges::controlflow2}
      {my lequal [::process::nodes::businessaction1 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction2 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction2 incoming] ::process::edges::controlflow3}
      {my lequal [::process::nodes::businessaction2 outgoing] ::process::edges::controlflow5}
      {my lequal [::process::nodes::businessaction2 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction3 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction3 incoming] ::process::edges::controlflow4}
      {my lequal [::process::nodes::businessaction3 outgoing] ::process::edges::controlflow6}
      {my lequal [::process::nodes::businessaction3 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction4 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction4 incoming] ::process::edges::controlflow7}
      {my lequal [::process::nodes::businessaction4 outgoing] ""}
      {my lequal [::process::nodes::businessaction4 owning_graph] ::process}
      {my lequal [::process::nodes::forknode1 info class] ::UML2::ForkNode}
      {my lequal [::process::nodes::forknode1 incoming] ::process::edges::controlflow2}
      {my lequal [::process::nodes::forknode1 outgoing] "::process::edges::controlflow3 ::process::edges::controlflow4"}
      {my lequal [::process::nodes::forknode1 owning_graph] ::process}
      {my lequal [::process::nodes::joinnode1 info class] ::UML2::JoinNode}
      {my lequal [::process::nodes::joinnode1 incoming] "::process::edges::controlflow5 ::process::edges::controlflow6"}
      {my lequal [::process::nodes::joinnode1 outgoing] ::process::edges::controlflow7}
      {my lequal [::process::nodes::joinnode1 owning_graph] ::process}
      {my lequal [::process::nodes::activityfinalnode1 info class] ::UML2::ActivityFinalNode}
      {my lequal [::process::nodes::activityfinalnode1 incoming] ""}
      {my lequal [::process::nodes::activityfinalnode1 owning_graph] ::process}
      {my lequal [::process::edges::controlflow1 source] Start}
      {my lequal [::process::edges::controlflow1 source_type] ::UML2::InitialNode}
      {my lequal [::process::edges::controlflow1 target] A}      
      {my lequal [::process::edges::controlflow1 target_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow1 source_navigable] 0}
      {my lequal [::process::edges::controlflow1 target_navigable] 1}
      {my lequal [::process::edges::controlflow1 owning_graph] ::process}
      {my lequal [::process::edges::controlflow2 source] A}
      {my lequal [::process::edges::controlflow2 source_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow2 target] FN}      
      {my lequal [::process::edges::controlflow2 target_type] ::UML2::ForkNode}
      {my lequal [::process::edges::controlflow2 source_navigable] 0}
      {my lequal [::process::edges::controlflow2 target_navigable] 1}
      {my lequal [::process::edges::controlflow2 owning_graph] ::process}
      {my lequal [::process::edges::controlflow3 source] FN}
      {my lequal [::process::edges::controlflow3 source_type] ::UML2::ForkNode}
      {my lequal [::process::edges::controlflow3 target] B}      
      {my lequal [::process::edges::controlflow3 target_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow3 source_navigable] 0}
      {my lequal [::process::edges::controlflow3 target_navigable] 1}
      {my lequal [::process::edges::controlflow3 owning_graph] ::process}
      {my lequal [::process::edges::controlflow4 source] FN}
      {my lequal [::process::edges::controlflow4 source_type] ::UML2::ForkNode}
      {my lequal [::process::edges::controlflow4 target] C}      
      {my lequal [::process::edges::controlflow4 target_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow4 source_navigable] 0}
      {my lequal [::process::edges::controlflow4 target_navigable] 1}
      {my lequal [::process::edges::controlflow4 owning_graph] ::process}
      {my lequal [::process::edges::controlflow5 source] B}
      {my lequal [::process::edges::controlflow5 source_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow5 target] JN}      
      {my lequal [::process::edges::controlflow5 target_type] ::UML2::JoinNode}
      {my lequal [::process::edges::controlflow5 source_navigable] 0}
      {my lequal [::process::edges::controlflow5 target_navigable] 1}
      {my lequal [::process::edges::controlflow5 owning_graph] ::process}
      {my lequal [::process::edges::controlflow6 source] C}
      {my lequal [::process::edges::controlflow6 source_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow6 target] JN}      
      {my lequal [::process::edges::controlflow6 target_type] ::UML2::JoinNode}
      {my lequal [::process::edges::controlflow6 source_navigable] 0}
      {my lequal [::process::edges::controlflow6 target_navigable] 1}
      {my lequal [::process::edges::controlflow6 owning_graph] ::process}
      {my lequal [::process::edges::controlflow7 source] JN}
      {my lequal [::process::edges::controlflow7 source_type] ::UML2::JoinNode}
      {my lequal [::process::edges::controlflow7 target] D}      
      {my lequal [::process::edges::controlflow7 target_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow7 source_navigable] 0}
      {my lequal [::process::edges::controlflow7 target_navigable] 1}
      {my lequal [::process::edges::controlflow7 owning_graph] ::process}
    }
BA_ControlNodesForkJoinCF::AddControlFlowFail2 postconditions assign\
    { {my lequal [lsort -dictionary [::process::nodes info children]] [list  ::process::nodes::activityfinalnode1\
									   ::process::nodes::businessaction1\
									   ::process::nodes::businessaction2\
									   ::process::nodes::businessaction3\
									   ::process::nodes::businessaction4\
									   ::process::nodes::forknode1\
									   ::process::nodes::initialnode1\
									   ::process::nodes::joinnode1]}
      {my lequal [lsort -dictionary [::process::edges info children]] [list ::process::edges::controlflow1\
									   ::process::edges::controlflow2\
								 	   ::process::edges::controlflow3\
								 	   ::process::edges::controlflow4\
								 	   ::process::edges::controlflow5\
									   ::process::edges::controlflow6\
								 	   ::process::edges::controlflow7]}
      {my lequal [::process::nodes::initialnode1 info class] ::UML2::InitialNode}
      {my lequal [::process::nodes::initialnode1 outgoing] ::process::edges::controlflow1}
      {my lequal [::process::nodes::initialnode1 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction1 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction1 incoming] ::process::edges::controlflow1}
      {my lequal [::process::nodes::businessaction1 outgoing] ::process::edges::controlflow2}
      {my lequal [::process::nodes::businessaction1 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction2 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction2 incoming] ::process::edges::controlflow3}
      {my lequal [::process::nodes::businessaction2 outgoing] ::process::edges::controlflow5}
      {my lequal [::process::nodes::businessaction2 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction3 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction3 incoming] ::process::edges::controlflow4}
      {my lequal [::process::nodes::businessaction3 outgoing] ::process::edges::controlflow6}
      {my lequal [::process::nodes::businessaction3 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction4 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction4 incoming] ::process::edges::controlflow7}
      {my lequal [::process::nodes::businessaction4 outgoing] ""}
      {my lequal [::process::nodes::businessaction4 owning_graph] ::process}
      {my lequal [::process::nodes::forknode1 info class] ::UML2::ForkNode}
      {my lequal [::process::nodes::forknode1 incoming] ::process::edges::controlflow2}
      {my lequal [::process::nodes::forknode1 outgoing] "::process::edges::controlflow3 ::process::edges::controlflow4"}
      {my lequal [::process::nodes::forknode1 owning_graph] ::process}
      {my lequal [::process::nodes::joinnode1 info class] ::UML2::JoinNode}
      {my lequal [::process::nodes::joinnode1 incoming] "::process::edges::controlflow5 ::process::edges::controlflow6"}
      {my lequal [::process::nodes::joinnode1 outgoing] ::process::edges::controlflow7}
      {my lequal [::process::nodes::joinnode1 owning_graph] ::process}
      {my lequal [::process::nodes::activityfinalnode1 info class] ::UML2::ActivityFinalNode}
      {my lequal [::process::nodes::activityfinalnode1 incoming] ""}
      {my lequal [::process::nodes::activityfinalnode1 owning_graph] ::process}
      {my lequal [::process::edges::controlflow1 source] Start}
      {my lequal [::process::edges::controlflow1 source_type] ::UML2::InitialNode}
      {my lequal [::process::edges::controlflow1 target] A}      
      {my lequal [::process::edges::controlflow1 target_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow1 source_navigable] 0}
      {my lequal [::process::edges::controlflow1 target_navigable] 1}
      {my lequal [::process::edges::controlflow1 owning_graph] ::process}
      {my lequal [::process::edges::controlflow2 source] A}
      {my lequal [::process::edges::controlflow2 source_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow2 target] FN}      
      {my lequal [::process::edges::controlflow2 target_type] ::UML2::ForkNode}
      {my lequal [::process::edges::controlflow2 source_navigable] 0}
      {my lequal [::process::edges::controlflow2 target_navigable] 1}
      {my lequal [::process::edges::controlflow2 owning_graph] ::process}
      {my lequal [::process::edges::controlflow3 source] FN}
      {my lequal [::process::edges::controlflow3 source_type] ::UML2::ForkNode}
      {my lequal [::process::edges::controlflow3 target] B}      
      {my lequal [::process::edges::controlflow3 target_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow3 source_navigable] 0}
      {my lequal [::process::edges::controlflow3 target_navigable] 1}
      {my lequal [::process::edges::controlflow3 owning_graph] ::process}
      {my lequal [::process::edges::controlflow4 source] FN}
      {my lequal [::process::edges::controlflow4 source_type] ::UML2::ForkNode}
      {my lequal [::process::edges::controlflow4 target] C}      
      {my lequal [::process::edges::controlflow4 target_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow4 source_navigable] 0}
      {my lequal [::process::edges::controlflow4 target_navigable] 1}
      {my lequal [::process::edges::controlflow4 owning_graph] ::process}
      {my lequal [::process::edges::controlflow5 source] B}
      {my lequal [::process::edges::controlflow5 source_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow5 target] JN}      
      {my lequal [::process::edges::controlflow5 target_type] ::UML2::JoinNode}
      {my lequal [::process::edges::controlflow5 source_navigable] 0}
      {my lequal [::process::edges::controlflow5 target_navigable] 1}
      {my lequal [::process::edges::controlflow5 owning_graph] ::process}
      {my lequal [::process::edges::controlflow6 source] C}
      {my lequal [::process::edges::controlflow6 source_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow6 target] JN}      
      {my lequal [::process::edges::controlflow6 target_type] ::UML2::JoinNode}
      {my lequal [::process::edges::controlflow6 source_navigable] 0}
      {my lequal [::process::edges::controlflow6 target_navigable] 1}
      {my lequal [::process::edges::controlflow6 owning_graph] ::process}
      {my lequal [::process::edges::controlflow7 source] JN}
      {my lequal [::process::edges::controlflow7 source_type] ::UML2::JoinNode}
      {my lequal [::process::edges::controlflow7 target] D}      
      {my lequal [::process::edges::controlflow7 target_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow7 source_navigable] 0}
      {my lequal [::process::edges::controlflow7 target_navigable] 1}
      {my lequal [::process::edges::controlflow7 owning_graph] ::process}
    }
BA_ControlNodesForkJoinCF order add BA_ControlNodesForkJoinCF::AddControlFlowFail2 end


###################################################################################
###################################################################################
###################################################################################
###################################################################################
###################################################################################

::STORM::TestCase BA_ControlNodesForkJoinCF2 \
    -setup_script {
       my resetAllAutonames ::xotcl::Object
      ::UML2::BusinessActivity create ::process
      ::process addNode ::UML2::InitialNode Start
      ::process addNode ::UML2::BusinessAction A
      ::process addNode ::UML2::BusinessAction B
      ::process addNode ::UML2::BusinessAction C
      ::process addNode ::UML2::BusinessAction D
      ::process addNode ::UML2::ActivityFinalNode End
      ::process addEdge ::UML2::ControlFlow\
	   ::UML2::InitialNode Start\
	   ::UML2::BusinessAction A
      ::process addNode ::UML2::ForkNode FN
      ::process addNode ::UML2::JoinNode JN
    } \
    -cleanup_script {
      ::process destroy
    }

::STORM::TestScenario BA_ControlNodesForkJoinCF2::AddControlFlowSuccess\
    -test_body {[::process addEdge ::UML2::ControlFlow\
		     ::UML2::ForkNode FN\
		     ::UML2::BusinessAction B] success}\
    -expected_result 1
BA_ControlNodesForkJoinCF2::AddControlFlowSuccess preconditions assign\
    { {my lequal [lsort -dictionary [::process::nodes info children]] [list ::process::nodes::activityfinalnode1\
								    ::process::nodes::businessaction1\
								    ::process::nodes::businessaction2\
								    ::process::nodes::businessaction3\
								    ::process::nodes::businessaction4\
								    ::process::nodes::forknode1\
								    ::process::nodes::initialnode1\
								    ::process::nodes::joinnode1]}
      {my lequal [::process::edges info children] ::process::edges::controlflow1}
      {my lequal [::process::nodes::initialnode1 info class] ::UML2::InitialNode}
      {my lequal [::process::nodes::initialnode1 outgoing] ::process::edges::controlflow1}
      {my lequal [::process::nodes::initialnode1 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction1 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction1 incoming] ::process::edges::controlflow1}
      {my lequal [::process::nodes::businessaction1 outgoing] ""}
      {my lequal [::process::nodes::businessaction1 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction2 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction2 incoming] ""}
      {my lequal [::process::nodes::businessaction2 outgoing] ""}
      {my lequal [::process::nodes::businessaction2 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction3 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction3 incoming] ""}
      {my lequal [::process::nodes::businessaction3 outgoing] ""}
      {my lequal [::process::nodes::businessaction3 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction4 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction4 incoming] ""}
      {my lequal [::process::nodes::businessaction4 outgoing] ""}
      {my lequal [::process::nodes::businessaction4 owning_graph] ::process}
      {my lequal [::process::nodes::forknode1 info class] ::UML2::ForkNode}
      {my lequal [::process::nodes::forknode1 incoming] ""}
      {my lequal [::process::nodes::forknode1 outgoing] ""}
      {my lequal [::process::nodes::forknode1 name] FN}
      {my lequal [::process::nodes::forknode1 owning_graph] ::process}
      {my lequal [::process::nodes::joinnode1 info class] ::UML2::JoinNode}
      {my lequal [::process::nodes::joinnode1 incoming] ""}
      {my lequal [::process::nodes::joinnode1 outgoing] ""}
      {my lequal [::process::nodes::joinnode1 name] JN}
      {my lequal [::process::nodes::joinnode1 owning_graph] ::process}
      {my lequal [::process::nodes::activityfinalnode1 info class] ::UML2::ActivityFinalNode}
      {my lequal [::process::nodes::activityfinalnode1 incoming] ""}
      {my lequal [::process::nodes::activityfinalnode1 owning_graph] ::process}
      {my lequal [::process::edges::controlflow1 source] Start}
      {my lequal [::process::edges::controlflow1 source_type] ::UML2::InitialNode}
      {my lequal [::process::edges::controlflow1 target] A}      
      {my lequal [::process::edges::controlflow1 target_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow1 source_navigable] 0}
      {my lequal [::process::edges::controlflow1 target_navigable] 1}
      {my lequal [::process::edges::controlflow1 owning_graph] ::process}
    }
BA_ControlNodesForkJoinCF2::AddControlFlowSuccess postconditions assign\
    { {my lequal [lsort -dictionary [::process::nodes info children]] [list  ::process::nodes::activityfinalnode1\
									   ::process::nodes::businessaction1\
									   ::process::nodes::businessaction2\
									   ::process::nodes::businessaction3\
									   ::process::nodes::businessaction4\
									   ::process::nodes::forknode1\
									   ::process::nodes::initialnode1\
									   ::process::nodes::joinnode1]}
      {my lequal [lsort -dictionary [::process::edges info children]] [list ::process::edges::controlflow1\
									   ::process::edges::controlflow2]}
      {my lequal [::process::nodes::initialnode1 info class] ::UML2::InitialNode}
      {my lequal [::process::nodes::initialnode1 outgoing] ::process::edges::controlflow1}
      {my lequal [::process::nodes::initialnode1 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction1 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction1 incoming] ::process::edges::controlflow1}
      {my lequal [::process::nodes::businessaction1 outgoing] ""}
      {my lequal [::process::nodes::businessaction1 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction2 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction2 incoming] ::process::edges::controlflow2}
      {my lequal [::process::nodes::businessaction2 outgoing] ""}
      {my lequal [::process::nodes::businessaction2 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction3 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction3 incoming] ""}
      {my lequal [::process::nodes::businessaction3 outgoing] ""}
      {my lequal [::process::nodes::businessaction3 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction4 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction4 incoming] ""}
      {my lequal [::process::nodes::businessaction4 outgoing] ""}
      {my lequal [::process::nodes::businessaction4 owning_graph] ::process}
      {my lequal [::process::nodes::forknode1 info class] ::UML2::ForkNode}
      {my lequal [::process::nodes::forknode1 incoming] ""}
      {my lequal [::process::nodes::forknode1 outgoing] ::process::edges::controlflow2}
      {my lequal [::process::nodes::forknode1 owning_graph] ::process}
      {my lequal [::process::nodes::joinnode1 info class] ::UML2::JoinNode}
      {my lequal [::process::nodes::joinnode1 incoming] ""}
      {my lequal [::process::nodes::joinnode1 outgoing] ""}
      {my lequal [::process::nodes::joinnode1 owning_graph] ::process}
      {my lequal [::process::nodes::activityfinalnode1 info class] ::UML2::ActivityFinalNode}
      {my lequal [::process::nodes::activityfinalnode1 incoming] ""}
      {my lequal [::process::nodes::activityfinalnode1 owning_graph] ::process}
      {my lequal [::process::edges::controlflow1 source] Start}
      {my lequal [::process::edges::controlflow1 source_type] ::UML2::InitialNode}
      {my lequal [::process::edges::controlflow1 target] A}      
      {my lequal [::process::edges::controlflow1 target_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow1 source_navigable] 0}
      {my lequal [::process::edges::controlflow1 target_navigable] 1}
      {my lequal [::process::edges::controlflow1 owning_graph] ::process}
      {my lequal [::process::edges::controlflow2 source] FN}
      {my lequal [::process::edges::controlflow2 source_type] ::UML2::ForkNode}
      {my lequal [::process::edges::controlflow2 target] B}      
      {my lequal [::process::edges::controlflow2 target_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow2 source_navigable] 0}
      {my lequal [::process::edges::controlflow2 target_navigable] 1}
      {my lequal [::process::edges::controlflow2 owning_graph] ::process}
    }
BA_ControlNodesForkJoinCF2 order add BA_ControlNodesForkJoinCF2::AddControlFlowSuccess end


::STORM::TestScenario BA_ControlNodesForkJoinCF2::AddObjectFlowFail\
    -test_body {[::process addEdge ::UML2::ObjectFlow\
		     ::UML2::BusinessAction A\
		     ::UML2::ForkNode FN] success}\
    -expected_result 0
BA_ControlNodesForkJoinCF2::AddObjectFlowFail preconditions assign\
    { {my lequal [lsort -dictionary [::process::nodes info children]] [list  ::process::nodes::activityfinalnode1\
									   ::process::nodes::businessaction1\
									   ::process::nodes::businessaction2\
									   ::process::nodes::businessaction3\
									   ::process::nodes::businessaction4\
									   ::process::nodes::forknode1\
									   ::process::nodes::initialnode1\
									   ::process::nodes::joinnode1]}
      {my lequal [lsort -dictionary [::process::edges info children]] [list ::process::edges::controlflow1\
									   ::process::edges::controlflow2]}
      {my lequal [::process::nodes::initialnode1 info class] ::UML2::InitialNode}
      {my lequal [::process::nodes::initialnode1 outgoing] ::process::edges::controlflow1}
      {my lequal [::process::nodes::initialnode1 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction1 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction1 incoming] ::process::edges::controlflow1}
      {my lequal [::process::nodes::businessaction1 outgoing] ""}
      {my lequal [::process::nodes::businessaction1 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction2 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction2 incoming] ::process::edges::controlflow2}
      {my lequal [::process::nodes::businessaction2 outgoing] ""}
      {my lequal [::process::nodes::businessaction2 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction3 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction3 incoming] ""}
      {my lequal [::process::nodes::businessaction3 outgoing] ""}
      {my lequal [::process::nodes::businessaction3 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction4 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction4 incoming] ""}
      {my lequal [::process::nodes::businessaction4 outgoing] ""}
      {my lequal [::process::nodes::businessaction4 owning_graph] ::process}
      {my lequal [::process::nodes::forknode1 info class] ::UML2::ForkNode}
      {my lequal [::process::nodes::forknode1 incoming] ""}
      {my lequal [::process::nodes::forknode1 outgoing] ::process::edges::controlflow2}
      {my lequal [::process::nodes::forknode1 owning_graph] ::process}
      {my lequal [::process::nodes::joinnode1 info class] ::UML2::JoinNode}
      {my lequal [::process::nodes::joinnode1 incoming] ""}
      {my lequal [::process::nodes::joinnode1 outgoing] ""}
      {my lequal [::process::nodes::joinnode1 owning_graph] ::process}
      {my lequal [::process::nodes::activityfinalnode1 info class] ::UML2::ActivityFinalNode}
      {my lequal [::process::nodes::activityfinalnode1 incoming] ""}
      {my lequal [::process::nodes::activityfinalnode1 owning_graph] ::process}
      {my lequal [::process::edges::controlflow1 source] Start}
      {my lequal [::process::edges::controlflow1 source_type] ::UML2::InitialNode}
      {my lequal [::process::edges::controlflow1 target] A}      
      {my lequal [::process::edges::controlflow1 target_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow1 source_navigable] 0}
      {my lequal [::process::edges::controlflow1 target_navigable] 1}
      {my lequal [::process::edges::controlflow1 owning_graph] ::process}
      {my lequal [::process::edges::controlflow2 source] FN}
      {my lequal [::process::edges::controlflow2 source_type] ::UML2::ForkNode}
      {my lequal [::process::edges::controlflow2 target] B}      
      {my lequal [::process::edges::controlflow2 target_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow2 source_navigable] 0}
      {my lequal [::process::edges::controlflow2 target_navigable] 1}
      {my lequal [::process::edges::controlflow2 owning_graph] ::process}
    }
BA_ControlNodesForkJoinCF2::AddObjectFlowFail postconditions assign\
    { {my lequal [lsort -dictionary [::process::nodes info children]] [list  ::process::nodes::activityfinalnode1\
									   ::process::nodes::businessaction1\
									   ::process::nodes::businessaction2\
									   ::process::nodes::businessaction3\
									   ::process::nodes::businessaction4\
									   ::process::nodes::forknode1\
									   ::process::nodes::initialnode1\
									   ::process::nodes::joinnode1]}
      {my lequal [lsort -dictionary [::process::edges info children]] [list ::process::edges::controlflow1\
									   ::process::edges::controlflow2]}
      {my lequal [::process::nodes::initialnode1 info class] ::UML2::InitialNode}
      {my lequal [::process::nodes::initialnode1 outgoing] ::process::edges::controlflow1}
      {my lequal [::process::nodes::initialnode1 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction1 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction1 incoming] ::process::edges::controlflow1}
      {my lequal [::process::nodes::businessaction1 outgoing] ""}
      {my lequal [::process::nodes::businessaction1 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction2 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction2 incoming] ::process::edges::controlflow2}
      {my lequal [::process::nodes::businessaction2 outgoing] ""}
      {my lequal [::process::nodes::businessaction2 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction3 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction3 incoming] ""}
      {my lequal [::process::nodes::businessaction3 outgoing] ""}
      {my lequal [::process::nodes::businessaction3 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction4 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction4 incoming] ""}
      {my lequal [::process::nodes::businessaction4 outgoing] ""}
      {my lequal [::process::nodes::businessaction4 owning_graph] ::process}
      {my lequal [::process::nodes::forknode1 info class] ::UML2::ForkNode}
      {my lequal [::process::nodes::forknode1 incoming] ""}
      {my lequal [::process::nodes::forknode1 outgoing] ::process::edges::controlflow2}
      {my lequal [::process::nodes::forknode1 owning_graph] ::process}
      {my lequal [::process::nodes::joinnode1 info class] ::UML2::JoinNode}
      {my lequal [::process::nodes::joinnode1 incoming] ""}
      {my lequal [::process::nodes::joinnode1 outgoing] ""}
      {my lequal [::process::nodes::joinnode1 owning_graph] ::process}
      {my lequal [::process::nodes::activityfinalnode1 info class] ::UML2::ActivityFinalNode}
      {my lequal [::process::nodes::activityfinalnode1 incoming] ""}
      {my lequal [::process::nodes::activityfinalnode1 owning_graph] ::process}
      {my lequal [::process::edges::controlflow1 source] Start}
      {my lequal [::process::edges::controlflow1 source_type] ::UML2::InitialNode}
      {my lequal [::process::edges::controlflow1 target] A}      
      {my lequal [::process::edges::controlflow1 target_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow1 source_navigable] 0}
      {my lequal [::process::edges::controlflow1 target_navigable] 1}
      {my lequal [::process::edges::controlflow1 owning_graph] ::process}
      {my lequal [::process::edges::controlflow2 source] FN}
      {my lequal [::process::edges::controlflow2 source_type] ::UML2::ForkNode}
      {my lequal [::process::edges::controlflow2 target] B}      
      {my lequal [::process::edges::controlflow2 target_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow2 source_navigable] 0}
      {my lequal [::process::edges::controlflow2 target_navigable] 1}
      {my lequal [::process::edges::controlflow2 owning_graph] ::process}
    }
BA_ControlNodesForkJoinCF2 order add BA_ControlNodesForkJoinCF2::AddObjectFlowFail end



::STORM::TestScenario BA_ControlNodesForkJoinCF2::AddObjectFlowFail2\
    -test_body {[::process addEdge ::UML2::ObjectFlow\
		     ::UML2::ForkNode FN\
		     ::UML2::BusinessAction C] success}\
    -expected_result 0
BA_ControlNodesForkJoinCF2::AddObjectFlowFail2 preconditions assign\
    { {my lequal [lsort -dictionary [::process::nodes info children]] [list  ::process::nodes::activityfinalnode1\
									   ::process::nodes::businessaction1\
									   ::process::nodes::businessaction2\
									   ::process::nodes::businessaction3\
									   ::process::nodes::businessaction4\
									   ::process::nodes::forknode1\
									   ::process::nodes::initialnode1\
									   ::process::nodes::joinnode1]}
      {my lequal [lsort -dictionary [::process::edges info children]] [list ::process::edges::controlflow1\
									   ::process::edges::controlflow2]}
      {my lequal [::process::nodes::initialnode1 info class] ::UML2::InitialNode}
      {my lequal [::process::nodes::initialnode1 outgoing] ::process::edges::controlflow1}
      {my lequal [::process::nodes::initialnode1 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction1 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction1 incoming] ::process::edges::controlflow1}
      {my lequal [::process::nodes::businessaction1 outgoing] ""}
      {my lequal [::process::nodes::businessaction1 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction2 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction2 incoming] ::process::edges::controlflow2}
      {my lequal [::process::nodes::businessaction2 outgoing] ""}
      {my lequal [::process::nodes::businessaction2 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction3 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction3 incoming] ""}
      {my lequal [::process::nodes::businessaction3 outgoing] ""}
      {my lequal [::process::nodes::businessaction3 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction4 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction4 incoming] ""}
      {my lequal [::process::nodes::businessaction4 outgoing] ""}
      {my lequal [::process::nodes::businessaction4 owning_graph] ::process}
      {my lequal [::process::nodes::forknode1 info class] ::UML2::ForkNode}
      {my lequal [::process::nodes::forknode1 incoming] ""}
      {my lequal [::process::nodes::forknode1 outgoing] ::process::edges::controlflow2}
      {my lequal [::process::nodes::forknode1 owning_graph] ::process}
      {my lequal [::process::nodes::joinnode1 info class] ::UML2::JoinNode}
      {my lequal [::process::nodes::joinnode1 incoming] ""}
      {my lequal [::process::nodes::joinnode1 outgoing] ""}
      {my lequal [::process::nodes::joinnode1 owning_graph] ::process}
      {my lequal [::process::nodes::activityfinalnode1 info class] ::UML2::ActivityFinalNode}
      {my lequal [::process::nodes::activityfinalnode1 incoming] ""}
      {my lequal [::process::nodes::activityfinalnode1 owning_graph] ::process}
      {my lequal [::process::edges::controlflow1 source] Start}
      {my lequal [::process::edges::controlflow1 source_type] ::UML2::InitialNode}
      {my lequal [::process::edges::controlflow1 target] A}      
      {my lequal [::process::edges::controlflow1 target_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow1 source_navigable] 0}
      {my lequal [::process::edges::controlflow1 target_navigable] 1}
      {my lequal [::process::edges::controlflow1 owning_graph] ::process}
      {my lequal [::process::edges::controlflow2 source] FN}
      {my lequal [::process::edges::controlflow2 source_type] ::UML2::ForkNode}
      {my lequal [::process::edges::controlflow2 target] B}      
      {my lequal [::process::edges::controlflow2 target_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow2 source_navigable] 0}
      {my lequal [::process::edges::controlflow2 target_navigable] 1}
      {my lequal [::process::edges::controlflow2 owning_graph] ::process}
    }
BA_ControlNodesForkJoinCF2::AddObjectFlowFail2 postconditions assign\
    { {my lequal [lsort -dictionary [::process::nodes info children]] [list  ::process::nodes::activityfinalnode1\
									   ::process::nodes::businessaction1\
									   ::process::nodes::businessaction2\
									   ::process::nodes::businessaction3\
									   ::process::nodes::businessaction4\
									   ::process::nodes::forknode1\
									   ::process::nodes::initialnode1\
									   ::process::nodes::joinnode1]}
      {my lequal [lsort -dictionary [::process::edges info children]] [list ::process::edges::controlflow1\
									   ::process::edges::controlflow2]}
      {my lequal [::process::nodes::initialnode1 info class] ::UML2::InitialNode}
      {my lequal [::process::nodes::initialnode1 outgoing] ::process::edges::controlflow1}
      {my lequal [::process::nodes::initialnode1 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction1 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction1 incoming] ::process::edges::controlflow1}
      {my lequal [::process::nodes::businessaction1 outgoing] ""}
      {my lequal [::process::nodes::businessaction1 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction2 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction2 incoming] ::process::edges::controlflow2}
      {my lequal [::process::nodes::businessaction2 outgoing] ""}
      {my lequal [::process::nodes::businessaction2 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction3 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction3 incoming] ""}
      {my lequal [::process::nodes::businessaction3 outgoing] ""}
      {my lequal [::process::nodes::businessaction3 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction4 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction4 incoming] ""}
      {my lequal [::process::nodes::businessaction4 outgoing] ""}
      {my lequal [::process::nodes::businessaction4 owning_graph] ::process}
      {my lequal [::process::nodes::forknode1 info class] ::UML2::ForkNode}
      {my lequal [::process::nodes::forknode1 incoming] ""}
      {my lequal [::process::nodes::forknode1 outgoing] ::process::edges::controlflow2}
      {my lequal [::process::nodes::forknode1 owning_graph] ::process}
      {my lequal [::process::nodes::joinnode1 info class] ::UML2::JoinNode}
      {my lequal [::process::nodes::joinnode1 incoming] ""}
      {my lequal [::process::nodes::joinnode1 outgoing] ""}
      {my lequal [::process::nodes::joinnode1 owning_graph] ::process}
      {my lequal [::process::nodes::activityfinalnode1 info class] ::UML2::ActivityFinalNode}
      {my lequal [::process::nodes::activityfinalnode1 incoming] ""}
      {my lequal [::process::nodes::activityfinalnode1 owning_graph] ::process}
      {my lequal [::process::edges::controlflow1 source] Start}
      {my lequal [::process::edges::controlflow1 source_type] ::UML2::InitialNode}
      {my lequal [::process::edges::controlflow1 target] A}      
      {my lequal [::process::edges::controlflow1 target_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow1 source_navigable] 0}
      {my lequal [::process::edges::controlflow1 target_navigable] 1}
      {my lequal [::process::edges::controlflow1 owning_graph] ::process}
      {my lequal [::process::edges::controlflow2 source] FN}
      {my lequal [::process::edges::controlflow2 source_type] ::UML2::ForkNode}
      {my lequal [::process::edges::controlflow2 target] B}      
      {my lequal [::process::edges::controlflow2 target_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow2 source_navigable] 0}
      {my lequal [::process::edges::controlflow2 target_navigable] 1}
      {my lequal [::process::edges::controlflow2 owning_graph] ::process}
    }
BA_ControlNodesForkJoinCF2 order add BA_ControlNodesForkJoinCF2::AddObjectFlowFail2 end


::STORM::TestScenario BA_ControlNodesForkJoinCF2::AddControlFlowSuccess2\
    -test_body {::process addEdge ::UML2::ControlFlow\
	   ::UML2::BusinessAction A\
	   ::UML2::ForkNode FN
      ::process addEdge ::UML2::ControlFlow\
	   ::UML2::ForkNode FN\
	   ::UML2::BusinessAction C
      [::process addEdge ::UML2::ControlFlow\
	   ::UML2::JoinNode JN\
	   ::UML2::BusinessAction D] success}\
    -expected_result 1
BA_ControlNodesForkJoinCF2::AddControlFlowSuccess2 preconditions assign\
    { {my lequal [lsort -dictionary [::process::nodes info children]] [list  ::process::nodes::activityfinalnode1\
									   ::process::nodes::businessaction1\
									   ::process::nodes::businessaction2\
									   ::process::nodes::businessaction3\
									   ::process::nodes::businessaction4\
									   ::process::nodes::forknode1\
									   ::process::nodes::initialnode1\
									   ::process::nodes::joinnode1]}
      {my lequal [lsort -dictionary [::process::edges info children]] [list ::process::edges::controlflow1\
									   ::process::edges::controlflow2]}
      {my lequal [::process::nodes::initialnode1 info class] ::UML2::InitialNode}
      {my lequal [::process::nodes::initialnode1 outgoing] ::process::edges::controlflow1}
      {my lequal [::process::nodes::initialnode1 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction1 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction1 incoming] ::process::edges::controlflow1}
      {my lequal [::process::nodes::businessaction1 outgoing] ""}
      {my lequal [::process::nodes::businessaction1 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction2 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction2 incoming] ::process::edges::controlflow2}
      {my lequal [::process::nodes::businessaction2 outgoing] ""}
      {my lequal [::process::nodes::businessaction2 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction3 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction3 incoming] ""}
      {my lequal [::process::nodes::businessaction3 outgoing] ""}
      {my lequal [::process::nodes::businessaction3 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction4 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction4 incoming] ""}
      {my lequal [::process::nodes::businessaction4 outgoing] ""}
      {my lequal [::process::nodes::businessaction4 owning_graph] ::process}
      {my lequal [::process::nodes::forknode1 info class] ::UML2::ForkNode}
      {my lequal [::process::nodes::forknode1 incoming] ""}
      {my lequal [::process::nodes::forknode1 outgoing] ::process::edges::controlflow2}
      {my lequal [::process::nodes::forknode1 owning_graph] ::process}
      {my lequal [::process::nodes::joinnode1 info class] ::UML2::JoinNode}
      {my lequal [::process::nodes::joinnode1 incoming] ""}
      {my lequal [::process::nodes::joinnode1 outgoing] ""}
      {my lequal [::process::nodes::joinnode1 owning_graph] ::process}
      {my lequal [::process::nodes::activityfinalnode1 info class] ::UML2::ActivityFinalNode}
      {my lequal [::process::nodes::activityfinalnode1 incoming] ""}
      {my lequal [::process::nodes::activityfinalnode1 owning_graph] ::process}
      {my lequal [::process::edges::controlflow1 source] Start}
      {my lequal [::process::edges::controlflow1 source_type] ::UML2::InitialNode}
      {my lequal [::process::edges::controlflow1 target] A}      
      {my lequal [::process::edges::controlflow1 target_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow1 source_navigable] 0}
      {my lequal [::process::edges::controlflow1 target_navigable] 1}
      {my lequal [::process::edges::controlflow1 owning_graph] ::process}
      {my lequal [::process::edges::controlflow2 source] FN}
      {my lequal [::process::edges::controlflow2 source_type] ::UML2::ForkNode}
      {my lequal [::process::edges::controlflow2 target] B}      
      {my lequal [::process::edges::controlflow2 target_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow2 source_navigable] 0}
      {my lequal [::process::edges::controlflow2 target_navigable] 1}
      {my lequal [::process::edges::controlflow2 owning_graph] ::process}
    }
BA_ControlNodesForkJoinCF2::AddControlFlowSuccess2 postconditions assign\
    { {my lequal [lsort -dictionary [::process::nodes info children]] [list  ::process::nodes::activityfinalnode1\
									   ::process::nodes::businessaction1\
									   ::process::nodes::businessaction2\
									   ::process::nodes::businessaction3\
									   ::process::nodes::businessaction4\
									   ::process::nodes::forknode1\
									   ::process::nodes::initialnode1\
									   ::process::nodes::joinnode1]}
      {my lequal [lsort -dictionary [::process::edges info children]] [list ::process::edges::controlflow1\
									   ::process::edges::controlflow2\
									   ::process::edges::controlflow3\
									   ::process::edges::controlflow4\
									   ::process::edges::controlflow5]}
      {my lequal [::process::nodes::initialnode1 info class] ::UML2::InitialNode}
      {my lequal [::process::nodes::initialnode1 outgoing] ::process::edges::controlflow1}
      {my lequal [::process::nodes::initialnode1 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction1 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction1 incoming] ::process::edges::controlflow1}
      {my lequal [::process::nodes::businessaction1 outgoing] ::process::edges::controlflow3}
      {my lequal [::process::nodes::businessaction1 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction2 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction2 incoming] ::process::edges::controlflow2}
      {my lequal [::process::nodes::businessaction2 outgoing] ""}
      {my lequal [::process::nodes::businessaction2 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction3 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction3 incoming] ::process::edges::controlflow4}
      {my lequal [::process::nodes::businessaction3 outgoing] ""}
      {my lequal [::process::nodes::businessaction3 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction4 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction4 incoming] ::process::edges::controlflow5}
      {my lequal [::process::nodes::businessaction4 outgoing] ""}
      {my lequal [::process::nodes::businessaction4 owning_graph] ::process}
      {my lequal [::process::nodes::forknode1 info class] ::UML2::ForkNode}
      {my lequal [::process::nodes::forknode1 incoming] ::process::edges::controlflow3}
      {my lequal [::process::nodes::forknode1 outgoing] "::process::edges::controlflow2 ::process::edges::controlflow4"}
      {my lequal [::process::nodes::forknode1 owning_graph] ::process}
      {my lequal [::process::nodes::joinnode1 info class] ::UML2::JoinNode}
      {my lequal [::process::nodes::joinnode1 incoming] ""}
      {my lequal [::process::nodes::joinnode1 outgoing] ::process::edges::controlflow5}
      {my lequal [::process::nodes::joinnode1 owning_graph] ::process}
      {my lequal [::process::nodes::activityfinalnode1 info class] ::UML2::ActivityFinalNode}
      {my lequal [::process::nodes::activityfinalnode1 incoming] ""}
      {my lequal [::process::nodes::activityfinalnode1 owning_graph] ::process}
      {my lequal [::process::edges::controlflow1 source] Start}
      {my lequal [::process::edges::controlflow1 source_type] ::UML2::InitialNode}
      {my lequal [::process::edges::controlflow1 target] A}      
      {my lequal [::process::edges::controlflow1 target_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow1 source_navigable] 0}
      {my lequal [::process::edges::controlflow1 target_navigable] 1}
      {my lequal [::process::edges::controlflow1 owning_graph] ::process}
      {my lequal [::process::edges::controlflow2 source] FN}
      {my lequal [::process::edges::controlflow2 source_type] ::UML2::ForkNode}
      {my lequal [::process::edges::controlflow2 target] B}      
      {my lequal [::process::edges::controlflow2 target_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow2 source_navigable] 0}
      {my lequal [::process::edges::controlflow2 target_navigable] 1}
      {my lequal [::process::edges::controlflow2 owning_graph] ::process}
      {my lequal [::process::edges::controlflow3 source] A}
      {my lequal [::process::edges::controlflow3 source_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow3 target] FN}      
      {my lequal [::process::edges::controlflow3 target_type] ::UML2::ForkNode}
      {my lequal [::process::edges::controlflow3 source_navigable] 0}
      {my lequal [::process::edges::controlflow3 target_navigable] 1}
      {my lequal [::process::edges::controlflow3 owning_graph] ::process}
      {my lequal [::process::edges::controlflow4 source] FN}
      {my lequal [::process::edges::controlflow4 source_type] ::UML2::ForkNode}
      {my lequal [::process::edges::controlflow4 target] C}      
      {my lequal [::process::edges::controlflow4 target_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow4 source_navigable] 0}
      {my lequal [::process::edges::controlflow4 target_navigable] 1}
      {my lequal [::process::edges::controlflow4 owning_graph] ::process}
      {my lequal [::process::edges::controlflow5 source] JN}
      {my lequal [::process::edges::controlflow5 source_type] ::UML2::JoinNode}
      {my lequal [::process::edges::controlflow5 target] D}      
      {my lequal [::process::edges::controlflow5 target_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow5 source_navigable] 0}
      {my lequal [::process::edges::controlflow5 target_navigable] 1}
      {my lequal [::process::edges::controlflow5 owning_graph] ::process}
    }
BA_ControlNodesForkJoinCF2 order add BA_ControlNodesForkJoinCF2::AddControlFlowSuccess2 end



::STORM::TestScenario BA_ControlNodesForkJoinCF2::AddObjFlowFail3\
    -test_body {[::process addEdge ::UML2::ObjectFlow\
		     ::UML2::BusinessAction B\
		     ::UML2::JoinNode JN] success}\
    -expected_result 0
BA_ControlNodesForkJoinCF2::AddObjFlowFail3 preconditions assign\
    { {my lequal [lsort -dictionary [::process::nodes info children]] [list  ::process::nodes::activityfinalnode1\
									   ::process::nodes::businessaction1\
									   ::process::nodes::businessaction2\
									   ::process::nodes::businessaction3\
									   ::process::nodes::businessaction4\
									   ::process::nodes::forknode1\
									   ::process::nodes::initialnode1\
									   ::process::nodes::joinnode1]}
      {my lequal [lsort -dictionary [::process::edges info children]] [list ::process::edges::controlflow1\
									   ::process::edges::controlflow2\
									   ::process::edges::controlflow3\
									   ::process::edges::controlflow4\
									   ::process::edges::controlflow5]}
      {my lequal [::process::nodes::initialnode1 info class] ::UML2::InitialNode}
      {my lequal [::process::nodes::initialnode1 outgoing] ::process::edges::controlflow1}
      {my lequal [::process::nodes::initialnode1 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction1 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction1 incoming] ::process::edges::controlflow1}
      {my lequal [::process::nodes::businessaction1 outgoing] ::process::edges::controlflow3}
      {my lequal [::process::nodes::businessaction1 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction2 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction2 incoming] ::process::edges::controlflow2}
      {my lequal [::process::nodes::businessaction2 outgoing] ""}
      {my lequal [::process::nodes::businessaction2 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction3 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction3 incoming] ::process::edges::controlflow4}
      {my lequal [::process::nodes::businessaction3 outgoing] ""}
      {my lequal [::process::nodes::businessaction3 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction4 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction4 incoming] ::process::edges::controlflow5}
      {my lequal [::process::nodes::businessaction4 outgoing] ""}
      {my lequal [::process::nodes::businessaction4 owning_graph] ::process}
      {my lequal [::process::nodes::forknode1 info class] ::UML2::ForkNode}
      {my lequal [::process::nodes::forknode1 incoming] ::process::edges::controlflow3}
      {my lequal [::process::nodes::forknode1 outgoing] "::process::edges::controlflow2 ::process::edges::controlflow4"}
      {my lequal [::process::nodes::forknode1 owning_graph] ::process}
      {my lequal [::process::nodes::joinnode1 info class] ::UML2::JoinNode}
      {my lequal [::process::nodes::joinnode1 incoming] ""}
      {my lequal [::process::nodes::joinnode1 outgoing] ::process::edges::controlflow5}
      {my lequal [::process::nodes::joinnode1 owning_graph] ::process}
      {my lequal [::process::nodes::activityfinalnode1 info class] ::UML2::ActivityFinalNode}
      {my lequal [::process::nodes::activityfinalnode1 incoming] ""}
      {my lequal [::process::nodes::activityfinalnode1 owning_graph] ::process}
      {my lequal [::process::edges::controlflow1 source] Start}
      {my lequal [::process::edges::controlflow1 source_type] ::UML2::InitialNode}
      {my lequal [::process::edges::controlflow1 target] A}      
      {my lequal [::process::edges::controlflow1 target_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow1 source_navigable] 0}
      {my lequal [::process::edges::controlflow1 target_navigable] 1}
      {my lequal [::process::edges::controlflow1 owning_graph] ::process}
      {my lequal [::process::edges::controlflow2 source] FN}
      {my lequal [::process::edges::controlflow2 source_type] ::UML2::ForkNode}
      {my lequal [::process::edges::controlflow2 target] B}      
      {my lequal [::process::edges::controlflow2 target_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow2 source_navigable] 0}
      {my lequal [::process::edges::controlflow2 target_navigable] 1}
      {my lequal [::process::edges::controlflow2 owning_graph] ::process}
      {my lequal [::process::edges::controlflow3 source] A}
      {my lequal [::process::edges::controlflow3 source_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow3 target] FN}      
      {my lequal [::process::edges::controlflow3 target_type] ::UML2::ForkNode}
      {my lequal [::process::edges::controlflow3 source_navigable] 0}
      {my lequal [::process::edges::controlflow3 target_navigable] 1}
      {my lequal [::process::edges::controlflow3 owning_graph] ::process}
      {my lequal [::process::edges::controlflow4 source] FN}
      {my lequal [::process::edges::controlflow4 source_type] ::UML2::ForkNode}
      {my lequal [::process::edges::controlflow4 target] C}      
      {my lequal [::process::edges::controlflow4 target_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow4 source_navigable] 0}
      {my lequal [::process::edges::controlflow4 target_navigable] 1}
      {my lequal [::process::edges::controlflow4 owning_graph] ::process}
      {my lequal [::process::edges::controlflow5 source] JN}
      {my lequal [::process::edges::controlflow5 source_type] ::UML2::JoinNode}
      {my lequal [::process::edges::controlflow5 target] D}      
      {my lequal [::process::edges::controlflow5 target_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow5 source_navigable] 0}
      {my lequal [::process::edges::controlflow5 target_navigable] 1}
      {my lequal [::process::edges::controlflow5 owning_graph] ::process}
    }
BA_ControlNodesForkJoinCF2::AddObjFlowFail3 postconditions assign\
    { {my lequal [lsort -dictionary [::process::nodes info children]] [list  ::process::nodes::activityfinalnode1\
									   ::process::nodes::businessaction1\
									   ::process::nodes::businessaction2\
									   ::process::nodes::businessaction3\
									   ::process::nodes::businessaction4\
									   ::process::nodes::forknode1\
									   ::process::nodes::initialnode1\
									   ::process::nodes::joinnode1]}
      {my lequal [lsort -dictionary [::process::edges info children]] [list ::process::edges::controlflow1\
									   ::process::edges::controlflow2\
									   ::process::edges::controlflow3\
									   ::process::edges::controlflow4\
									   ::process::edges::controlflow5]}
      {my lequal [::process::nodes::initialnode1 info class] ::UML2::InitialNode}
      {my lequal [::process::nodes::initialnode1 outgoing] ::process::edges::controlflow1}
      {my lequal [::process::nodes::initialnode1 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction1 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction1 incoming] ::process::edges::controlflow1}
      {my lequal [::process::nodes::businessaction1 outgoing] ::process::edges::controlflow3}
      {my lequal [::process::nodes::businessaction1 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction2 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction2 incoming] ::process::edges::controlflow2}
      {my lequal [::process::nodes::businessaction2 outgoing] ""}
      {my lequal [::process::nodes::businessaction2 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction3 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction3 incoming] ::process::edges::controlflow4}
      {my lequal [::process::nodes::businessaction3 outgoing] ""}
      {my lequal [::process::nodes::businessaction3 owning_graph] ::process}
      {my lequal [::process::nodes::businessaction4 info class] ::UML2::BusinessAction}
      {my lequal [::process::nodes::businessaction4 incoming] ::process::edges::controlflow5}
      {my lequal [::process::nodes::businessaction4 outgoing] ""}
      {my lequal [::process::nodes::businessaction4 owning_graph] ::process}
      {my lequal [::process::nodes::forknode1 info class] ::UML2::ForkNode}
      {my lequal [::process::nodes::forknode1 incoming] ::process::edges::controlflow3}
      {my lequal [::process::nodes::forknode1 outgoing] "::process::edges::controlflow2 ::process::edges::controlflow4"}
      {my lequal [::process::nodes::forknode1 owning_graph] ::process}
      {my lequal [::process::nodes::joinnode1 info class] ::UML2::JoinNode}
      {my lequal [::process::nodes::joinnode1 incoming] ""}
      {my lequal [::process::nodes::joinnode1 outgoing] ::process::edges::controlflow5}
      {my lequal [::process::nodes::joinnode1 owning_graph] ::process}
      {my lequal [::process::nodes::activityfinalnode1 info class] ::UML2::ActivityFinalNode}
      {my lequal [::process::nodes::activityfinalnode1 incoming] ""}
      {my lequal [::process::nodes::activityfinalnode1 owning_graph] ::process}
      {my lequal [::process::edges::controlflow1 source] Start}
      {my lequal [::process::edges::controlflow1 source_type] ::UML2::InitialNode}
      {my lequal [::process::edges::controlflow1 target] A}      
      {my lequal [::process::edges::controlflow1 target_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow1 source_navigable] 0}
      {my lequal [::process::edges::controlflow1 target_navigable] 1}
      {my lequal [::process::edges::controlflow1 owning_graph] ::process}
      {my lequal [::process::edges::controlflow2 source] FN}
      {my lequal [::process::edges::controlflow2 source_type] ::UML2::ForkNode}
      {my lequal [::process::edges::controlflow2 target] B}      
      {my lequal [::process::edges::controlflow2 target_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow2 source_navigable] 0}
      {my lequal [::process::edges::controlflow2 target_navigable] 1}
      {my lequal [::process::edges::controlflow2 owning_graph] ::process}
      {my lequal [::process::edges::controlflow3 source] A}
      {my lequal [::process::edges::controlflow3 source_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow3 target] FN}      
      {my lequal [::process::edges::controlflow3 target_type] ::UML2::ForkNode}
      {my lequal [::process::edges::controlflow3 source_navigable] 0}
      {my lequal [::process::edges::controlflow3 target_navigable] 1}
      {my lequal [::process::edges::controlflow3 owning_graph] ::process}
      {my lequal [::process::edges::controlflow4 source] FN}
      {my lequal [::process::edges::controlflow4 source_type] ::UML2::ForkNode}
      {my lequal [::process::edges::controlflow4 target] C}      
      {my lequal [::process::edges::controlflow4 target_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow4 source_navigable] 0}
      {my lequal [::process::edges::controlflow4 target_navigable] 1}
      {my lequal [::process::edges::controlflow4 owning_graph] ::process}
      {my lequal [::process::edges::controlflow5 source] JN}
      {my lequal [::process::edges::controlflow5 source_type] ::UML2::JoinNode}
      {my lequal [::process::edges::controlflow5 target] D}      
      {my lequal [::process::edges::controlflow5 target_type] ::UML2::BusinessAction}
      {my lequal [::process::edges::controlflow5 source_navigable] 0}
      {my lequal [::process::edges::controlflow5 target_navigable] 1}
      {my lequal [::process::edges::controlflow5 owning_graph] ::process}
    }
BA_ControlNodesForkJoinCF2 order add BA_ControlNodesForkJoinCF2::AddObjFlowFail3 end

